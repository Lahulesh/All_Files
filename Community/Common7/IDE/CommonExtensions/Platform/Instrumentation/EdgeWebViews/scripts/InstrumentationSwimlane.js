define("instrumentationSwimlane",["diagnosticsHub","diagnosticsHub-swimlanes","plugin-vs-v2"],((e,t,i)=>{return s={67:(e,t,i)=>{var s,a;s=[i,t,i(560),i(560),i(560),i(560),i(117),i(117),i(117),i(117),i(803)],a=function(e,t,i,s,a,n,r,o,h,l,u){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.EnabledDataSeries=void 0;class d{constructor(e,t,i){this._logger=l.getLogger("EnabledDataSeries"),this._enabledAtStart=!1,this._toggleEvents=[],this._dataWarehouseRequestHandle=1,this._droppedRequest=!1,this._newDataEvent=new r.AggregatedEvent,this._colorScheme=new a.ChartColorScheme("#92AB00","#AECD00"),this._title=i,this._tooltip=i,this._marker=document.createElement("div"),this._marker.classList.add("countersDataSeries-marker"),this._marker.style.backgroundColor=this._colorScheme.lineColor,this._marker.style.width=2*d.PointRadiusInPixels+"px",this._marker.style.height=2*d.PointRadiusInPixels+"px",this._InstrumentationDataSeries=e,(new u.InstrumentationSwimlaneMarshaler).isToolSupported().then((e=>e?(this._enabledAtStart=t,o.loadDataWarehouse().then((e=>{const t={customDomain:{CounterId:d.counterId}};return e.getFilteredData(t,d.analyzerId)})).then((e=>{this._countersResult=e})).then((()=>{this._dataWarehouseRequestHandle=null,this._droppedRequest=!1,this.requestUpdate()}))):Promise.resolve(null)))}static get counterId(){return"InstrumentationTool.Counters.CollectionEnabled"}static get analyzerId(){return"66EDDDF1-2277-40F3-983A-6FF57A433ECB"}get minValue(){return Number.NaN}get maxValue(){return Number.NaN}get tooltip(){return this._tooltip}get title(){return this._title}get marker(){return this._marker}get newDataEvent(){return this._newDataEvent}dispose(){this._countersResult.dispose(),this._newDataEvent.dispose()}onViewportChanged(e){}getPointAtTimestamp(e,t=s.PointToFind.Nearest){if(0===this._InstrumentationDataSeries.cachedPoints.length||0===this._toggleEvents.length&&!this._enabledAtStart)return null;let i={Timestamp:e,Value:0};const a=(e,t)=>t.Timestamp.greater(e.Timestamp);let r=!0;if(0!==this._toggleEvents.length){const t=n.Utilities.findLessThan(this._toggleEvents,i,a);this._toggleEvents[t].Timestamp.greater(e)?r=this._enabledAtStart:0===this._toggleEvents[t].Value&&(r=!1)}if(!r)return null;const o=this.getPointIndex(this._InstrumentationDataSeries.cachedPoints,i.Timestamp,0,this._InstrumentationDataSeries.cachedPoints.length-1,t);return i=this._InstrumentationDataSeries.cachedPoints[o],{timestamp:i.Timestamp,tooltip:this._tooltip,value:i.Value,color:this._colorScheme}}onDataUpdate(e){this.requestUpdate()}draw(e,t){if(0===this._InstrumentationDataSeries.cachedPoints.length||0===t.chartRect.width)return;let i=0,a=this._InstrumentationDataSeries.cachedPoints.length-1,n=this._enabledAtStart;e.save(),e.lineWidth=t.chartRect.height<100?1:2,e.fillStyle=this._colorScheme.lineFillColor,e.strokeStyle=this._colorScheme.lineColor,this._toggleEvents.forEach((r=>{r.Value>.5?(i=this.getPointIndex(this._InstrumentationDataSeries.cachedPoints,r.Timestamp,0,this._InstrumentationDataSeries.cachedPoints.length-1,s.PointToFind.Nearest),n=!0):(a=this.getPointIndex(this._InstrumentationDataSeries.cachedPoints,r.Timestamp,0,this._InstrumentationDataSeries.cachedPoints.length-1,s.PointToFind.Nearest),n=!1,this.drawBetween(e,t,i,a))})),n&&(a=this._InstrumentationDataSeries.cachedPoints.length-1,this.drawBetween(e,t,i,a)),e.restore()}drawBetween(e,t,i,s){const a=e=>t.chartRect.height-n.Utilities.scaleToRange(e,t.gridY.min,t.gridY.max,0,t.chartRect.height),r=e=>n.Utilities.convertToPixel(e,t.gridX,t.chartRect.width,!1);e.beginPath();for(let t=i;t<=s;++t)e.lineTo(r(this._InstrumentationDataSeries.cachedPoints[t].Timestamp),a(this._InstrumentationDataSeries.cachedPoints[t].Value));e.stroke(),e.lineTo(r(this._InstrumentationDataSeries.cachedPoints[s].Timestamp),a(t.gridY.min)),e.lineTo(r(this._InstrumentationDataSeries.cachedPoints[i].Timestamp),t.chartRect.height),e.closePath(),e.fill();const o=h.BigNumber.divideNumber(t.gridX.elapsed,t.chartRect.width);if(h.BigNumber.convertFromNumber(d.CounterFrequencyPerPixel).greater(o))for(let t=i;t<=s;++t)e.beginPath(),e.arc(r(this._InstrumentationDataSeries.cachedPoints[t].Timestamp),a(this._InstrumentationDataSeries.cachedPoints[t].Value),d.PointRadiusInPixels,0,2*Math.PI),e.fill()}requestUpdate(){this._dataWarehouseRequestHandle?this._droppedRequest=!0:this._dataWarehouseRequestHandle=window.setTimeout((()=>{this._countersResult.getResult(null).then((e=>this.cachePoints(e))).then((()=>{this._dataWarehouseRequestHandle=null,this._droppedRequest&&(window.setTimeout((()=>this.requestUpdate()),i.Constants.TimeoutImmediate),this._droppedRequest=!1)}),(e=>{this._logger.error(`Error occurred while communicating with the DataWarehouse: ${JSON.stringify(e,Object.getOwnPropertyNames(e))}`)}))}),i.Constants.TimeoutImmediate)}cachePoints(e){e.p.forEach((e=>{this._toggleEvents.push({Timestamp:new h.BigNumber(e.t.h,e.t.l),Value:e.v,ToolTip:e.tt})})),this._newDataEvent.invokeEvent(this)}getPointIndex(e,t,i,a,r){const o=(e,t)=>t.Timestamp.greater(e.Timestamp),l={Timestamp:t,Value:0};switch(r){case s.PointToFind.LessThanOrEqual:return n.Utilities.findLessThan(e,l,o,i,a);case s.PointToFind.GreaterThanOrEqual:return n.Utilities.findGreaterThan(e,l,o,i,a);case s.PointToFind.Nearest:default:{const i=n.Utilities.findLessThan(e,l,o),s=Math.min(i+1,e.length-1),a=h.BigNumber.subtract(t,e[i].Timestamp),r=h.BigNumber.subtract(e[s].Timestamp,t);return a.greater(r)?s:i}}}}t.EnabledDataSeries=d,d.PointRadiusInPixels=2.5,d.CounterFrequencyPerPixel=1e8/(2*d.PointRadiusInPixels+4)}.apply(t,s),void 0===a||(e.exports=a)},479:(e,t,i)=>{var s,a;s=[i,t,i(560),i(560),i(560),i(560),i(117),i(117),i(117),i(117),i(803),i(886)],a=function(e,t,i,s,a,n,r,o,h,l,u,d){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.HighlightDataSeries=void 0;class c{constructor(e,t,i){this._logger=l.getLogger("HighlightDataSeries"),this._dataWarehouseRequestHandle=1,this._droppedRequest=!1,this._newDataEvent=new r.AggregatedEvent,this._onHighlightChangedHandler=e=>this.onHighlightChanged(e),this._samples=250,this._InstrumentationSwimlaneMarshaler=new u.InstrumentationSwimlaneMarshaler,this._rowId=-1,this._rowType=d.RowType.Unknown,this._timestamps=[],this._colorScheme=new a.ChartColorScheme("#903F8B","#903F8B"),this._title=i,this._tooltip=i,this._marker=document.createElement("div"),this._marker.style.backgroundColor=this._colorScheme.lineColor,this._marker.style.width="1px",this._marker.style.height="100%",this._InstrumentationDataSeries=e,this._currentTimespan=t,this._InstrumentationSwimlaneMarshaler.graphHighlightEvent.addEventListener(this._onHighlightChangedHandler),this._InstrumentationSwimlaneMarshaler.graphHighlightingFeatureEnabled().then((e=>(this._graphHighlightingFeatureEnabled=e,this._graphHighlightingFeatureEnabled?o.loadDataWarehouse().then((e=>{this._dataWarehouse=e;const t=this._droppedRequest;this._droppedRequest=!1,this._dataWarehouseRequestHandle=null,t&&this.requestUpdate()})):Promise.resolve(null))))}onHighlightChanged(e){null===e?(this._rowId=-1,this._rowType=d.RowType.Unknown):(this._rowId=e.rowId,this._rowType=e.rowType),this.requestUpdate()}get minValue(){return Number.NaN}get maxValue(){return Number.NaN}get tooltip(){return this._tooltip}get title(){return this._title}get marker(){return this._marker}get newDataEvent(){return this._newDataEvent}dispose(){this._InstrumentationSwimlaneMarshaler.graphHighlightEvent.removeEventListener(this._onHighlightChangedHandler),this._newDataEvent.dispose()}onViewportChanged(e){this._currentTimespan=e,this.requestUpdate()}onDataUpdate(e){this.requestUpdate()}getPointAtTimestamp(e,t=s.PointToFind.Nearest){if(0===this._InstrumentationDataSeries.cachedPoints.length||0===this._timestamps.length)return null;const i=this.getOccurrencePointIndex(this._timestamps,e,0,this._timestamps.length-1,t);return{timestamp:this._timestamps[i],tooltip:this._tooltip,value:Number.NaN,color:this._colorScheme}}draw(e,t){if(0===this._InstrumentationDataSeries.cachedPoints.length||t.gridX.elapsed.equals(h.BigNumber.zero)||t.chartRect.width<=0||0===this._timestamps.length)return;2*t.chartRect.width!==this._samples&&(this._samples=2*t.chartRect.width,this.requestUpdate()),e.save(),e.lineWidth=1,e.fillStyle=this._colorScheme.lineFillColor,e.strokeStyle=this._colorScheme.lineColor;const i=e=>n.Utilities.convertToPixel(e,t.gridX,t.chartRect.width,!1),a=e=>t.chartRect.height-n.Utilities.scaleToRange(e,t.gridY.min,t.gridY.max,0,t.chartRect.height);this._timestamps.forEach((n=>{const r=i(n),o=this._InstrumentationDataSeries.getPointAtTimestamp(n,s.PointToFind.LessThanOrEqual),h=this._InstrumentationDataSeries.getPointAtTimestamp(n,s.PointToFind.GreaterThanOrEqual);if(!o||!h)return;const l=i(o.timestamp),u=a(o.value),d=i(h.timestamp),c={x:r,y:u+(a(h.value)-u)/(d-l)*(r-l)};e.beginPath(),e.moveTo(c.x+.5,a(t.gridY.min)),e.lineTo(c.x+.5,c.y),e.stroke(),e.closePath()})),e.restore()}requestUpdate(){this._graphHighlightingFeatureEnabled&&(this._dataWarehouseRequestHandle?this._droppedRequest=!0:this._dataWarehouseRequestHandle=window.setTimeout((()=>{if(this._currentTimespan.elapsed.equals(h.BigNumber.zero))return void(this._dataWarehouseRequestHandle=null);const e=h.BigNumber.divideNumber(this._currentTimespan.elapsed,2),t=h.BigNumber.subtract(this._currentTimespan.begin,h.BigNumber.min(e,this._currentTimespan.begin)),s=h.BigNumber.multiply(h.BigNumber.divide(t,this._currentTimespan.elapsed),this._currentTimespan.elapsed),a=h.BigNumber.add(s,h.BigNumber.multiplyNumber(this._currentTimespan.elapsed,3)),n=this._rowId,r=this._rowType;this._InstrumentationSwimlaneMarshaler.getCurrentResultStatus().then((e=>{if(e.preparationStatus!==d.ResultPreparationStatus.Completed)return this._droppedRequest=!0,c.EmptyOccurrencesDto;if(r!==d.RowType.CallTreeNode&&r!==d.RowType.Function&&r!==d.RowType.Module)return c.EmptyOccurrencesDto;const t=this._dataWarehouse.getResultById(e.result.resultId),i={view:"timestamps",type:d.ResultTaskType.GetData,begin:s.jsonValue,end:a.jsonValue,rowId:n,rowType:r,samples:Math.max(this._samples,1)};return t.getResult(i)})).then((e=>{this._timestamps=e.timestamps.map((e=>new h.BigNumber(e.h,e.l))),this._newDataEvent.invokeEvent(this)})).then((()=>{this._dataWarehouseRequestHandle=null,this._droppedRequest&&(window.setTimeout((()=>this.requestUpdate()),i.Constants.TimeoutImmediate),this._droppedRequest=!1)}),(e=>{this._logger.error(`Error occurred while communicating with the DataWarehouse: ${JSON.stringify(e,Object.getOwnPropertyNames(e))}`)}))}),i.Constants.TimeoutImmediate))}getOccurrencePointIndex(e,t,i,a,r){const o=(e,t)=>t.greater(e);switch(r){case s.PointToFind.LessThanOrEqual:return n.Utilities.findLessThan(e,t,o,i,a);case s.PointToFind.GreaterThanOrEqual:return n.Utilities.findGreaterThan(e,t,o,i,a);case s.PointToFind.Nearest:default:{const i=n.Utilities.findLessThan(e,t,o),s=Math.min(i+1,e.length-1),a=h.BigNumber.subtract(t,e[i]),r=h.BigNumber.subtract(e[s],t);return a.greater(r)?s:i}}}}t.HighlightDataSeries=c,c.EmptyOccurrencesDto={timestamps:[]}}.apply(t,s),void 0===a||(e.exports=a)},371:(e,t,i)=>{var s,a;s=[i,t,i(31)],a=function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),window.InstrumentationSwimlaneFactory=i.InstrumentationSwimlaneFactory}.apply(t,s),void 0===a||(e.exports=a)},892:(e,t,i)=>{var s,a;s=[i,t,i(432),i(560),i(560),i(560),i(117),i(117),i(117),i(117)],a=function(e,t,i,s,a,n,r,o,h,l){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.InstrumentationCountersDataSeries=void 0;class u{constructor(e,t,i,s,a,n,d){this._logger=l.getLogger("InstrumentationCountersDataSeries"),this._cachedPoints=[],this._drawFill=!1,this._dataWarehouseRequestHandle=1,this._droppedRequest=!1,this._currentTimespan=new h.JsonTimespan(h.BigNumber.zero,h.BigNumber.zero),this._seriesMin=0,this._seriesMax=0,this._newDataEvent=new r.AggregatedEvent,this._samples=250,this._currentTimespan=t,this._unitConverter=i,this._colorScheme=s,this._drawFill=a,this._title=n,this._tooltip=d,this._marker=document.createElement("div"),this._marker.classList.add("countersDataSeries-marker"),this._marker.style.backgroundColor=this._colorScheme.lineColor,this._marker.style.width=2*u.PointRadiusInPixels+"px",this._marker.style.height=2*u.PointRadiusInPixels+"px",o.loadDataWarehouse().then((t=>{const i={customDomain:{Task:"GetCounter",CounterId:e}};return t.getFilteredData(i,u.analyzerId)})).then((e=>{this._countersResult=e})).then((()=>{this._dataWarehouseRequestHandle=null,this._droppedRequest=!1,this.requestUpdate()}))}static get analyzerId(){return"66EDDDF1-2277-40F3-983A-6FF57A433ECB"}get cachedPoints(){return this._cachedPoints}get minValue(){return this._seriesMin}get maxValue(){return this._seriesMax}get marker(){return this._marker}get title(){return this._title}get tooltip(){return this._tooltip}get newDataEvent(){return this._newDataEvent}dispose(){this._countersResult.dispose(),this._newDataEvent.dispose()}onViewportChanged(e){this._currentTimespan=e,this.requestUpdate()}onDataUpdate(e){const t=this._cachedPoints.length;(this._currentTimespan.contains(e)||0===t||t>0&&this._currentTimespan.end.greater(this._cachedPoints[t-1].Timestamp))&&this.requestUpdate()}getPointAtTimestamp(e,t=a.PointToFind.Nearest){if(0===this._cachedPoints.length)return null;let s={Timestamp:e,Value:0};const r=(e,t)=>t.Timestamp.greater(e.Timestamp);switch(t){case a.PointToFind.LessThanOrEqual:{const e=n.Utilities.findLessThan(this._cachedPoints,s,r);s=this._cachedPoints[e];break}case a.PointToFind.GreaterThanOrEqual:{const e=n.Utilities.findGreaterThan(this._cachedPoints,s,r);s=this._cachedPoints[e];break}case a.PointToFind.Nearest:default:{const t=n.Utilities.findLessThan(this._cachedPoints,s,r),i=Math.min(t+1,this._cachedPoints.length-1),a=h.BigNumber.subtract(e,this._cachedPoints[t].Timestamp),o=h.BigNumber.subtract(this._cachedPoints[i].Timestamp,e),l=a.greater(o)?i:t;s=this._cachedPoints[l];break}}return{timestamp:s.Timestamp,tooltip:i.Resources.getString("/DiagnosticsHubSwimlaneResources/ChartSeriesFormattableTooltipLabel",this._unitConverter.formatNumber(s.Value,i.Resources.getString("/DiagnosticsHubSwimlaneResources/CountersDataSeriesTooltipNumberWithFormat"),null,!0)),value:s.Value,color:this._colorScheme}}draw(e,t){if(0===this._cachedPoints.length||t.gridX.elapsed.equals(h.BigNumber.zero)||t.chartRect.width<=0)return;t.chartRect.width!==this._samples&&(this._samples=t.chartRect.width,this.requestUpdate());const i=e=>t.chartRect.height-n.Utilities.scaleToRange(e,t.gridY.min,t.gridY.max,0,t.chartRect.height),s=e=>n.Utilities.convertToPixel(e,t.gridX,t.chartRect.width,!1);e.save(),e.lineWidth=t.chartRect.height<100?1:2,e.fillStyle=this._colorScheme.lineFillColor,e.strokeStyle=this._colorScheme.lineColor;const a=s(this._cachedPoints[0].Timestamp);e.beginPath(),e.moveTo(a,i(this._cachedPoints[0].Value)),this._cachedPoints.forEach((t=>e.lineTo(s(t.Timestamp),i(t.Value)))),e.stroke(),this._drawFill&&(e.lineTo(s(this._cachedPoints[this._cachedPoints.length-1].Timestamp),i(t.gridY.min)),e.lineTo(a,t.chartRect.height),e.closePath(),e.fill());const r=h.BigNumber.divideNumber(t.gridX.elapsed,t.chartRect.width);h.BigNumber.convertFromNumber(u.CounterFrequencyPerPixel).greater(r)&&this._cachedPoints.forEach((t=>{e.beginPath(),e.arc(s(t.Timestamp),i(t.Value),u.PointRadiusInPixels,0,2*Math.PI),e.fill()})),e.restore()}requestUpdate(){this._dataWarehouseRequestHandle?this._droppedRequest=!0:this._dataWarehouseRequestHandle=window.setTimeout((()=>{if(this._currentTimespan.elapsed.equals(h.BigNumber.zero))return void(this._dataWarehouseRequestHandle=null);const e=h.BigNumber.divideNumber(this._currentTimespan.elapsed,2),t=h.BigNumber.subtract(this._currentTimespan.begin,h.BigNumber.min(e,this._currentTimespan.begin)),i=h.BigNumber.multiply(h.BigNumber.divide(t,this._currentTimespan.elapsed),this._currentTimespan.elapsed),a=h.BigNumber.add(i,h.BigNumber.multiplyNumber(this._currentTimespan.elapsed,3)),n={type:"SamplePoints",begin:i.jsonValue,end:a.jsonValue,samples:Math.max(this._samples,2)};this._countersResult.getResult(n).then((e=>this.cachePoints(e))).then((()=>{this._dataWarehouseRequestHandle=null,this._droppedRequest&&(window.setTimeout((()=>this.requestUpdate()),s.Constants.TimeoutImmediate),this._droppedRequest=!1)}),(e=>{this._logger.error(`Error occurred while communicating with the DataWarehouse: ${JSON.stringify(e,Object.getOwnPropertyNames(e))}`)}))}),s.Constants.TimeoutImmediate)}cachePoints(e){this._cachedPoints=e.p.map((e=>{const t=new h.BigNumber(e.t.h,e.t.l);return this._seriesMin=Math.min(this._seriesMin,e.v),this._seriesMax=Math.max(this._seriesMax,e.v),{Timestamp:t,Value:e.v,ToolTip:e.tt}})),this._newDataEvent.invokeEvent(this)}}t.InstrumentationCountersDataSeries=u,u.PointRadiusInPixels=2.5,u.CounterFrequencyPerPixel=1e8/(2*u.PointRadiusInPixels+4)}.apply(t,s),void 0===a||(e.exports=a)},31:(e,t,i)=>{var s,a;s=[i,t,i(560),i(560),i(560),i(560),i(560),i(560),i(560),i(560),i(560),i(892),i(67),i(479)],a=function(e,t,i,s,a,n,r,o,h,l,u,d,c,m){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.InstrumentationSwimlaneFactory=void 0,t.InstrumentationSwimlaneFactory=function(e,t,g,p,_,T){const w=new u.SwimlaneConfiguration(e,_,p);w.header.isBodyExpanded=t;const S=w.graph,P=new i.LocalizedUnitConverter(S.jsonConfig.Units,S.resources),v=[],b=new d.InstrumentationCountersDataSeries(S.jsonConfig.Series[0].DataSource.CounterId,w.graph.timeRange,new i.LocalizedUnitConverter(S.jsonConfig.Units,S.resources),new a.ChartColorScheme("rgb(118, 174, 200)","rgba(118, 174, 200, 0.65)"),!0,w.graph.resources[S.jsonConfig.Series[0].Legend],w.graph.resources[S.jsonConfig.Series[0].LegendTooltip]);v.push(b);const R=new c.EnabledDataSeries(b,S.jsonConfig.EnabledAtStart,w.graph.resources.InstrumentationGraphProfilingEnabled);if(v.push(R),!S.jsonConfig.IsCollecting&&!S.jsonConfig.IsPerfDebugger){const e=new m.HighlightDataSeries(b,w.graph.timeRange,w.graph.resources.InstrumentationGraphCurrentFunction);v.push(e)}w.graph.jsonConfig.Series=[];const D=new r.MultiSeriesGraph(w.graph,v);D.container.setAttribute("aria-label",e.Title);const I=new o.Scale(w.graph.scale,s.ScaleType.Left,P),C=new o.Scale(w.graph.scale,s.ScaleType.Right,P);D.scaleChangedEvent.addEventListener(I.onScaleChanged.bind(I)),D.scaleChangedEvent.addEventListener(C.onScaleChanged.bind(C)),w.header.unit=w.graph.unit;const E=new l.SwimlaneBase(w.header,w.graph.height,_,T);return D.scaleChangedEvent.addEventListener(E.onScaleChanged.bind(E)),E.addMainRegionControl(new h.SelectionOverlay(D,_,T,w.id)),E.addMainRegionControl(new n.GridLineRenderer(_)),E.addLeftRegionControl(I),E.addRightRegionControl(C),E}}.apply(t,s),void 0===a||(e.exports=a)},803:(e,t,i)=>{var s,a;s=[i,t,i(432),i(117)],a=function(e,t,i,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.InstrumentationSwimlaneMarshaler=void 0;let a=null;t.InstrumentationSwimlaneMarshaler=class{constructor(){null===a&&(a=i.JSONMarshaler.attachToMarshaledObject("Microsoft.DiagnosticsHub.Tools.Instrumentation.InstrumentationToolSwimlaneMarshaler",{},!0)),this._graphHighlightEvent=new s.ObservableEvent(a,"GraphHighlightChangedEvent")}isToolSupported(){return a._call("isToolSupported")}updateGraphHighlight(e,t){return a._call("raiseGraphHighlightChangedEvent",{rowId:e,rowType:t})}clearGraphHighlight(){return a._call("clearGraphHighlight")}get graphHighlightEvent(){return this._graphHighlightEvent}graphHighlightingFeatureEnabled(){return a._call("graphHighlightingFeatureEnabled")}getCurrentResultStatus(){return a._call("getCurrentResultStatus")}}}.apply(t,s),void 0===a||(e.exports=a)},886:(e,t,i)=>{var s;s=function(e,t){"use strict";var i,s,a,n,r,o;Object.defineProperty(t,"__esModule",{value:!0}),t.ResultStage=t.ResultNotStartedReason=t.ResultPreparationStatus=t.RowType=t.ResultTaskType=t.DataLoadEvent=void 0,(o=t.DataLoadEvent||(t.DataLoadEvent={}))[o.DataLoadStart=0]="DataLoadStart",o[o.DataLoadCompleted=1]="DataLoadCompleted",o[o.DataLoadFailed=2]="DataLoadFailed",o[o.DataLoadCanceled=3]="DataLoadCanceled",(r=t.ResultTaskType||(t.ResultTaskType={}))[r.Expand=1]="Expand",r[r.Search=2]="Search",r[r.GetData=3]="GetData",r[r.Sort=4]="Sort",(n=t.RowType||(t.RowType={}))[n.Unknown=0]="Unknown",n[n.Process=1]="Process",n[n.Module=2]="Module",n[n.Function=3]="Function",n[n.Thread=4]="Thread",n[n.CallTreeNode=5]="CallTreeNode",n[n.Allocation=6]="Allocation",(a=t.ResultPreparationStatus||(t.ResultPreparationStatus={}))[a.NotStarted=0]="NotStarted",a[a.InProgress=1]="InProgress",a[a.Completed=2]="Completed",a[a.Canceled=3]="Canceled",a[a.Failed=4]="Failed",(s=t.ResultNotStartedReason||(t.ResultNotStartedReason={}))[s.Unknown=0]="Unknown",s[s.NoValidTimeSelection=1]="NoValidTimeSelection",s[s.NoValidThreadSelection=2]="NoValidThreadSelection",s[s.ToolIsDisabled=3]="ToolIsDisabled",s[s.TargetRunningUnderDebugger=4]="TargetRunningUnderDebugger",(i=t.ResultStage||(t.ResultStage={}))[i.Unknown=0]="Unknown",i[i.Threads=1]="Threads",i[i.Instrumentation=2]="Instrumentation"}.apply(t,[i,t]),void 0===s||(e.exports=s)},117:t=>{"use strict";t.exports=e},560:e=>{"use strict";e.exports=t},432:e=>{"use strict";e.exports=require("plugin-vs-v2")}},a={},function e(t){var i=a[t];if(void 0!==i)return i.exports;var n=a[t]={exports:{}};return s[t](n,n.exports,e),n.exports}(371);var s,a}));
// SIG // Begin signature block
// SIG // MIIoKAYJKoZIhvcNAQcCoIIoGTCCKBUCAQExDzANBglg
// SIG // hkgBZQMEAgEFADB3BgorBgEEAYI3AgEEoGkwZzAyBgor
// SIG // BgEEAYI3AgEeMCQCAQEEEBDgyQbOONQRoqMAEEvTUJAC
// SIG // AQACAQACAQACAQACAQAwMTANBglghkgBZQMEAgEFAAQg
// SIG // F9teQe09ITjE0ULhYRsuXfNPmwfUB97LHBqFsWkr9HWg
// SIG // gg12MIIF9DCCA9ygAwIBAgITMwAAA061PHrBhG/rKwAA
// SIG // AAADTjANBgkqhkiG9w0BAQsFADB+MQswCQYDVQQGEwJV
// SIG // UzETMBEGA1UECBMKV2FzaGluZ3RvbjEQMA4GA1UEBxMH
// SIG // UmVkbW9uZDEeMBwGA1UEChMVTWljcm9zb2Z0IENvcnBv
// SIG // cmF0aW9uMSgwJgYDVQQDEx9NaWNyb3NvZnQgQ29kZSBT
// SIG // aWduaW5nIFBDQSAyMDExMB4XDTIzMDMxNjE4NDMyOVoX
// SIG // DTI0MDMxNDE4NDMyOVowdDELMAkGA1UEBhMCVVMxEzAR
// SIG // BgNVBAgTCldhc2hpbmd0b24xEDAOBgNVBAcTB1JlZG1v
// SIG // bmQxHjAcBgNVBAoTFU1pY3Jvc29mdCBDb3Jwb3JhdGlv
// SIG // bjEeMBwGA1UEAxMVTWljcm9zb2Z0IENvcnBvcmF0aW9u
// SIG // MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA
// SIG // 3QiojSOiARVrryVJn+lnTiamZiMGLORuwCQ+VG3C+rbA
// SIG // vhATw269+qRRqNW7FKed50chWJ53KDIPBStHfIy5cNJY
// SIG // HsQw6+4InH9szgRVqn7/50i8MyRTT+VtNwxf9daGddq0
// SIG // hahpZvjuOnEY0wxQaTEQmWRnXWZUQY4r28tHiNVYEw9U
// SIG // 7wHXwWEHvNn4ZlkJGEf5VpgCvr1v9fmzu4x2sV0zQsSy
// SIG // AVtOxfDwY1HMBcccn23tphweIdS+FNDn2vh1/2kREO0q
// SIG // mGc+fbFzNskjn72MiI56kjvNDRgWs+Q78yBvPCdPgTYT
// SIG // rto5eg33Ko2ELNR/zzEkCCuhO5Vw10qV8wIDAQABo4IB
// SIG // czCCAW8wHwYDVR0lBBgwFgYKKwYBBAGCN0wIAQYIKwYB
// SIG // BQUHAwMwHQYDVR0OBBYEFJzHO2Z/7pCgbAYlpMHTX7De
// SIG // aXcAMEUGA1UdEQQ+MDykOjA4MR4wHAYDVQQLExVNaWNy
// SIG // b3NvZnQgQ29ycG9yYXRpb24xFjAUBgNVBAUTDTIzMDAx
// SIG // Mis1MDA1MTYwHwYDVR0jBBgwFoAUSG5k5VAF04KqFzc3
// SIG // IrVtqMp1ApUwVAYDVR0fBE0wSzBJoEegRYZDaHR0cDov
// SIG // L3d3dy5taWNyb3NvZnQuY29tL3BraW9wcy9jcmwvTWlj
// SIG // Q29kU2lnUENBMjAxMV8yMDExLTA3LTA4LmNybDBhBggr
// SIG // BgEFBQcBAQRVMFMwUQYIKwYBBQUHMAKGRWh0dHA6Ly93
// SIG // d3cubWljcm9zb2Z0LmNvbS9wa2lvcHMvY2VydHMvTWlj
// SIG // Q29kU2lnUENBMjAxMV8yMDExLTA3LTA4LmNydDAMBgNV
// SIG // HRMBAf8EAjAAMA0GCSqGSIb3DQEBCwUAA4ICAQA9tb/a
// SIG // R6C3QUjZRQI5pJseF8TmQD7FccV2w8kL9fpBg3vV6YAZ
// SIG // 09ZV58eyQ6RTCgcAMiMHSJ5r4SvaRgWt9U8ni96e0drN
// SIG // C/EgATz0SRwBJODR6QV8R45uEyo3swG0qqm4LMtdGOyg
// SIG // KcvvVKymtpBprLgErJPeT1Zub3puzpk7ONr5tASVFPiT
// SIG // 0C4PGP7HY907Uny2GGQGicEwCIIu3Yc5+YWrS6Ow4c/u
// SIG // E/jKxXfui1GtlN86/e0MMw7YcfkT/f0WZ7q+Ip80kLBu
// SIG // QwlSDKQNZdjVhANygHGtLSNpeoUDWLGii9ZHn3Xxwqz8
// SIG // RK8vKJyY8hhr/WCqC7+gDjuzoSRJm0Jc/8ZLGBtjfyUj
// SIG // ifkKmKRkxLmBWFVmop+x3uo4G+NSW6Thig3RP2/ldqv4
// SIG // F1IBXtoHcE6Qg7L4fEjEaKtfwTV3K+4kwFN/FYK/N4lb
// SIG // T2JhYWTlTNFC6f5Ck1aIqyKT9igsU+DnpDnLbfIK2J4S
// SIG // dekDI5jL+aOd4YzRVzsYoJEFmM1DvusOdINBQHhWvObo
// SIG // AggepVxJNtRRQdRXSB6Y0kH/iz/1tjlfx34Qt7kz4Cm0
// SIG // bV6PN02WBLnaKMmfwFbtPLIm2dzJBjiTkSxETcCpthu6
// SIG // KnTr+EI/GdCaxoDM4+OjRSgMZC0qROaB0GD9R7T8dZT3
// SIG // w+4jUmybD+i4lB1x9TCCB3owggVioAMCAQICCmEOkNIA
// SIG // AAAAAAMwDQYJKoZIhvcNAQELBQAwgYgxCzAJBgNVBAYT
// SIG // AlVTMRMwEQYDVQQIEwpXYXNoaW5ndG9uMRAwDgYDVQQH
// SIG // EwdSZWRtb25kMR4wHAYDVQQKExVNaWNyb3NvZnQgQ29y
// SIG // cG9yYXRpb24xMjAwBgNVBAMTKU1pY3Jvc29mdCBSb290
// SIG // IENlcnRpZmljYXRlIEF1dGhvcml0eSAyMDExMB4XDTEx
// SIG // MDcwODIwNTkwOVoXDTI2MDcwODIxMDkwOVowfjELMAkG
// SIG // A1UEBhMCVVMxEzARBgNVBAgTCldhc2hpbmd0b24xEDAO
// SIG // BgNVBAcTB1JlZG1vbmQxHjAcBgNVBAoTFU1pY3Jvc29m
// SIG // dCBDb3Jwb3JhdGlvbjEoMCYGA1UEAxMfTWljcm9zb2Z0
// SIG // IENvZGUgU2lnbmluZyBQQ0EgMjAxMTCCAiIwDQYJKoZI
// SIG // hvcNAQEBBQADggIPADCCAgoCggIBAKvw+nIQHC6t2G6q
// SIG // ghBNNLrytlghn0IbKmvpWlCquAY4GgRJun/DDB7dN2vG
// SIG // EtgL8DjCmQawyDnVARQxQtOJDXlkh36UYCRsr55JnOlo
// SIG // XtLfm1OyCizDr9mpK656Ca/XllnKYBoF6WZ26DJSJhIv
// SIG // 56sIUM+zRLdd2MQuA3WraPPLbfM6XKEW9Ea64DhkrG5k
// SIG // NXimoGMPLdNAk/jj3gcN1Vx5pUkp5w2+oBN3vpQ97/vj
// SIG // K1oQH01WKKJ6cuASOrdJXtjt7UORg9l7snuGG9k+sYxd
// SIG // 6IlPhBryoS9Z5JA7La4zWMW3Pv4y07MDPbGyr5I4ftKd
// SIG // gCz1TlaRITUlwzluZH9TupwPrRkjhMv0ugOGjfdf8NBS
// SIG // v4yUh7zAIXQlXxgotswnKDglmDlKNs98sZKuHCOnqWbs
// SIG // YR9q4ShJnV+I4iVd0yFLPlLEtVc/JAPw0XpbL9Uj43Bd
// SIG // D1FGd7P4AOG8rAKCX9vAFbO9G9RVS+c5oQ/pI0m8GLhE
// SIG // fEXkwcNyeuBy5yTfv0aZxe/CHFfbg43sTUkwp6uO3+xb
// SIG // n6/83bBm4sGXgXvt1u1L50kppxMopqd9Z4DmimJ4X7Iv
// SIG // hNdXnFy/dygo8e1twyiPLI9AN0/B4YVEicQJTMXUpUMv
// SIG // dJX3bvh4IFgsE11glZo+TzOE2rCIF96eTvSWsLxGoGyY
// SIG // 0uDWiIwLAgMBAAGjggHtMIIB6TAQBgkrBgEEAYI3FQEE
// SIG // AwIBADAdBgNVHQ4EFgQUSG5k5VAF04KqFzc3IrVtqMp1
// SIG // ApUwGQYJKwYBBAGCNxQCBAweCgBTAHUAYgBDAEEwCwYD
// SIG // VR0PBAQDAgGGMA8GA1UdEwEB/wQFMAMBAf8wHwYDVR0j
// SIG // BBgwFoAUci06AjGQQ7kUBU7h6qfHMdEjiTQwWgYDVR0f
// SIG // BFMwUTBPoE2gS4ZJaHR0cDovL2NybC5taWNyb3NvZnQu
// SIG // Y29tL3BraS9jcmwvcHJvZHVjdHMvTWljUm9vQ2VyQXV0
// SIG // MjAxMV8yMDExXzAzXzIyLmNybDBeBggrBgEFBQcBAQRS
// SIG // MFAwTgYIKwYBBQUHMAKGQmh0dHA6Ly93d3cubWljcm9z
// SIG // b2Z0LmNvbS9wa2kvY2VydHMvTWljUm9vQ2VyQXV0MjAx
// SIG // MV8yMDExXzAzXzIyLmNydDCBnwYDVR0gBIGXMIGUMIGR
// SIG // BgkrBgEEAYI3LgMwgYMwPwYIKwYBBQUHAgEWM2h0dHA6
// SIG // Ly93d3cubWljcm9zb2Z0LmNvbS9wa2lvcHMvZG9jcy9w
// SIG // cmltYXJ5Y3BzLmh0bTBABggrBgEFBQcCAjA0HjIgHQBM
// SIG // AGUAZwBhAGwAXwBwAG8AbABpAGMAeQBfAHMAdABhAHQA
// SIG // ZQBtAGUAbgB0AC4gHTANBgkqhkiG9w0BAQsFAAOCAgEA
// SIG // Z/KGpZjgVHkaLtPYdGcimwuWEeFjkplCln3SeQyQwWVf
// SIG // Liw++MNy0W2D/r4/6ArKO79HqaPzadtjvyI1pZddZYSQ
// SIG // fYtGUFXYDJJ80hpLHPM8QotS0LD9a+M+By4pm+Y9G6XU
// SIG // tR13lDni6WTJRD14eiPzE32mkHSDjfTLJgJGKsKKELuk
// SIG // qQUMm+1o+mgulaAqPyprWEljHwlpblqYluSD9MCP80Yr
// SIG // 3vw70L01724lruWvJ+3Q3fMOr5kol5hNDj0L8giJ1h/D
// SIG // Mhji8MUtzluetEk5CsYKwsatruWy2dsViFFFWDgycSca
// SIG // f7H0J/jeLDogaZiyWYlobm+nt3TDQAUGpgEqKD6CPxNN
// SIG // ZgvAs0314Y9/HG8VfUWnduVAKmWjw11SYobDHWM2l4bf
// SIG // 2vP48hahmifhzaWX0O5dY0HjWwechz4GdwbRBrF1HxS+
// SIG // YWG18NzGGwS+30HHDiju3mUv7Jf2oVyW2ADWoUa9WfOX
// SIG // pQlLSBCZgB/QACnFsZulP0V3HjXG0qKin3p6IvpIlR+r
// SIG // +0cjgPWe+L9rt0uX4ut1eBrs6jeZeRhL/9azI2h15q/6
// SIG // /IvrC4DqaTuv/DDtBEyO3991bWORPdGdVk5Pv4BXIqF4
// SIG // ETIheu9BCrE/+6jMpF3BoYibV3FWTkhFwELJm3ZbCoBI
// SIG // a/15n8G9bW1qyVJzEw16UM0xghoKMIIaBgIBATCBlTB+
// SIG // MQswCQYDVQQGEwJVUzETMBEGA1UECBMKV2FzaGluZ3Rv
// SIG // bjEQMA4GA1UEBxMHUmVkbW9uZDEeMBwGA1UEChMVTWlj
// SIG // cm9zb2Z0IENvcnBvcmF0aW9uMSgwJgYDVQQDEx9NaWNy
// SIG // b3NvZnQgQ29kZSBTaWduaW5nIFBDQSAyMDExAhMzAAAD
// SIG // TrU8esGEb+srAAAAAANOMA0GCWCGSAFlAwQCAQUAoIGu
// SIG // MBkGCSqGSIb3DQEJAzEMBgorBgEEAYI3AgEEMBwGCisG
// SIG // AQQBgjcCAQsxDjAMBgorBgEEAYI3AgEVMC8GCSqGSIb3
// SIG // DQEJBDEiBCB73JKXZd33HDKW2DAH7vnZgWDU+9YuuBng
// SIG // xfn7UgGWwDBCBgorBgEEAYI3AgEMMTQwMqAUgBIATQBp
// SIG // AGMAcgBvAHMAbwBmAHShGoAYaHR0cDovL3d3dy5taWNy
// SIG // b3NvZnQuY29tMA0GCSqGSIb3DQEBAQUABIIBAB9uIAEY
// SIG // R2idgtAuLMRVlpsRY2HBy7peD8GGx0ELKLDZnB8RDNie
// SIG // bsw4a8/w5UhEyxw8/5Le9bPXZXKgUXrZO6eunUxI0SQ4
// SIG // j2nVk+ax1JxKrMk6jeziuBfwLWXbWZntqMzS3EuYJ5p+
// SIG // iakSiNYyHkiFrMBCvckCpTBbZiESBd6hDHqJa96fAYYU
// SIG // cJJcCvEoFSsRI/90HuwY8H3Qd/UY+eoutT0UdKcN304s
// SIG // pFYHsSoZIBnYZZpYjXtWBOLbiJCnr2DqwFSo9bZLzuD5
// SIG // iHihAqZEAAYikGp9GvP/H98XrBG4zkIa/k87PzJYu0+c
// SIG // MvDb44NQQ3l3pK1noePq8Bt20EmhgheUMIIXkAYKKwYB
// SIG // BAGCNwMDATGCF4Awghd8BgkqhkiG9w0BBwKgghdtMIIX
// SIG // aQIBAzEPMA0GCWCGSAFlAwQCAQUAMIIBUgYLKoZIhvcN
// SIG // AQkQAQSgggFBBIIBPTCCATkCAQEGCisGAQQBhFkKAwEw
// SIG // MTANBglghkgBZQMEAgEFAAQgM63pEzYBVUM07ZY1O12u
// SIG // gkXqg6XscMzuQb5GdzMad8ECBmUorOGUyBgTMjAyMzEw
// SIG // MjAxNzA0MzYuNjM0WjAEgAIB9KCB0aSBzjCByzELMAkG
// SIG // A1UEBhMCVVMxEzARBgNVBAgTCldhc2hpbmd0b24xEDAO
// SIG // BgNVBAcTB1JlZG1vbmQxHjAcBgNVBAoTFU1pY3Jvc29m
// SIG // dCBDb3Jwb3JhdGlvbjElMCMGA1UECxMcTWljcm9zb2Z0
// SIG // IEFtZXJpY2EgT3BlcmF0aW9uczEnMCUGA1UECxMeblNo
// SIG // aWVsZCBUU1MgRVNOOkUwMDItMDVFMC1EOTQ3MSUwIwYD
// SIG // VQQDExxNaWNyb3NvZnQgVGltZS1TdGFtcCBTZXJ2aWNl
// SIG // oIIR6jCCByAwggUIoAMCAQICEzMAAAHZnFwFkrCDaz4A
// SIG // AQAAAdkwDQYJKoZIhvcNAQELBQAwfDELMAkGA1UEBhMC
// SIG // VVMxEzARBgNVBAgTCldhc2hpbmd0b24xEDAOBgNVBAcT
// SIG // B1JlZG1vbmQxHjAcBgNVBAoTFU1pY3Jvc29mdCBDb3Jw
// SIG // b3JhdGlvbjEmMCQGA1UEAxMdTWljcm9zb2Z0IFRpbWUt
// SIG // U3RhbXAgUENBIDIwMTAwHhcNMjMwNjAxMTgzMjU4WhcN
// SIG // MjQwMjAxMTgzMjU4WjCByzELMAkGA1UEBhMCVVMxEzAR
// SIG // BgNVBAgTCldhc2hpbmd0b24xEDAOBgNVBAcTB1JlZG1v
// SIG // bmQxHjAcBgNVBAoTFU1pY3Jvc29mdCBDb3Jwb3JhdGlv
// SIG // bjElMCMGA1UECxMcTWljcm9zb2Z0IEFtZXJpY2EgT3Bl
// SIG // cmF0aW9uczEnMCUGA1UECxMeblNoaWVsZCBUU1MgRVNO
// SIG // OkUwMDItMDVFMC1EOTQ3MSUwIwYDVQQDExxNaWNyb3Nv
// SIG // ZnQgVGltZS1TdGFtcCBTZXJ2aWNlMIICIjANBgkqhkiG
// SIG // 9w0BAQEFAAOCAg8AMIICCgKCAgEA1ekgzda4GNt9Oci3
// SIG // QnVDbxwhBOGdLnA+giry+ZQOxzPNUjJFt+kVO+1GgS/T
// SIG // 0nL4qn1cxNq9qUW0TLQwTMBMdYmos1dhGbDRhrs3kd1z
// SIG // WDm0LyVS2gogZLQGXau+QTRSIpfkn3aV4Cs1UGYgwSQz
// SIG // edFggAza62+PGeGe/yr8s2g+Bm/mmXgoqAdhoNZud3fu
// SIG // qVEwXN1jucR2Yv66yP13Z4YhOv27KY6VOWrnwpSA8dEA
// SIG // 6tUEcNOGnayoXA1shi90mgaf4YzfuCSVOys77ClmVXU7
// SIG // lz6I52k8FnB3RBn88Ymhd9M3fEmOGEVHDBjzkDkR9SD8
// SIG // JMMJakJHNBwZCQkM4ml2PyKYDEcP1z+FL/iQSfEWRimT
// SIG // dc0T1k/XebxxlEpl95u+0SqAn5IEiYnyIkIuhXNDmCku
// SIG // oGTgO53eLfpYgK6/Z4qngv1HDTrla3FQuAm5MHydnh5G
// SIG // lodfLFLd1A/EB2C0MJ/eT/h5vD2SYoK9UkS3LJvKTj3n
// SIG // uzwW53SP1XiibJkHY3pNmhTvVRp1LcwwwaMJYV7IbMGT
// SIG // DJCyf+I1M0JlAX5viQB9edehPhtNsEuzYMzMJqR1gpgG
// SIG // hXXew8iSKhmum3Ga0e0AC3ZMCIVUA4M2QLjcasL4eCGu
// SIG // GSOVaMo+G+81gIZrq6cKTKYo8/onnlsH+mXZsrEY0f8m
// SIG // elF5hmsCAwEAAaOCAUkwggFFMB0GA1UdDgQWBBQcOsEp
// SIG // U2eoBV5dOcP7NxmtX+dcJzAfBgNVHSMEGDAWgBSfpxVd
// SIG // AF5iXYP05dJlpxtTNRnpcjBfBgNVHR8EWDBWMFSgUqBQ
// SIG // hk5odHRwOi8vd3d3Lm1pY3Jvc29mdC5jb20vcGtpb3Bz
// SIG // L2NybC9NaWNyb3NvZnQlMjBUaW1lLVN0YW1wJTIwUENB
// SIG // JTIwMjAxMCgxKS5jcmwwbAYIKwYBBQUHAQEEYDBeMFwG
// SIG // CCsGAQUFBzAChlBodHRwOi8vd3d3Lm1pY3Jvc29mdC5j
// SIG // b20vcGtpb3BzL2NlcnRzL01pY3Jvc29mdCUyMFRpbWUt
// SIG // U3RhbXAlMjBQQ0ElMjAyMDEwKDEpLmNydDAMBgNVHRMB
// SIG // Af8EAjAAMBYGA1UdJQEB/wQMMAoGCCsGAQUFBwMIMA4G
// SIG // A1UdDwEB/wQEAwIHgDANBgkqhkiG9w0BAQsFAAOCAgEA
// SIG // KjbVWCzutUzLiGpwu3JbdIvl0UWx8J8DaNOUN7OKaRbX
// SIG // eJwpgf0yTwyerrxK8sbNL8OWPo0MFIip4ZdlRhsCKtKV
// SIG // gyLmluKaTFdaWEHyenbQRpEYkz9XilbwEWGTEWiE3vWY
// SIG // cCSZ2D/N6TMRwsWhLGQuIpWN/+eXaneGV0ws/3KRuWp5
// SIG // g2q7Z1poMrMoDbLU8G1iSUY/OYGEZI8Yv58SgIhBcZeh
// SIG // n5HJ11cvA0RUI9XdwIqrHj6HiM8btYrgCUcA633uDZyh
// SIG // 6qE4FrL+3gliZ1o1lkbe0URq6b8y0KPwcVG/IuPVMEYP
// SIG // RuW8aXeUrtW9tuBr+htR0VPqiRwdc6HuNQ9q/4nNgT6L
// SIG // rFfZ3mCuaiOTxy7IQJ+mE0JZW1faQmzlL2TtHbXcKeRx
// SIG // 9n8OqHyTcCnDxJWqpBHMb64YUVqsDYGhFU8iFeIzHPIz
// SIG // 28djYfcwM7Z2/TX5wxThPv4BfHGak2v0+uUxjT97jIj9
// SIG // 4K/JyF0NiEcDFVKC5hrtqn5oQ6HsLN3XL5OrNWgOplx8
// SIG // PjADRCAyio8N4thuibWZBHprtTl7bJIP7Rp38sGjIKuQ
// SIG // mrlPW+np07QPlBPhip5okFumFBz4QSNC9kBu+k0Qa3uT
// SIG // 6TVR4snP9NW41BDKXmgfiJwB+Jw8WF8dfMGyRPnvyGzL
// SIG // 9NeOxBS+/dnRCxdF8KqnFNEwggdxMIIFWaADAgECAhMz
// SIG // AAAAFcXna54Cm0mZAAAAAAAVMA0GCSqGSIb3DQEBCwUA
// SIG // MIGIMQswCQYDVQQGEwJVUzETMBEGA1UECBMKV2FzaGlu
// SIG // Z3RvbjEQMA4GA1UEBxMHUmVkbW9uZDEeMBwGA1UEChMV
// SIG // TWljcm9zb2Z0IENvcnBvcmF0aW9uMTIwMAYDVQQDEylN
// SIG // aWNyb3NvZnQgUm9vdCBDZXJ0aWZpY2F0ZSBBdXRob3Jp
// SIG // dHkgMjAxMDAeFw0yMTA5MzAxODIyMjVaFw0zMDA5MzAx
// SIG // ODMyMjVaMHwxCzAJBgNVBAYTAlVTMRMwEQYDVQQIEwpX
// SIG // YXNoaW5ndG9uMRAwDgYDVQQHEwdSZWRtb25kMR4wHAYD
// SIG // VQQKExVNaWNyb3NvZnQgQ29ycG9yYXRpb24xJjAkBgNV
// SIG // BAMTHU1pY3Jvc29mdCBUaW1lLVN0YW1wIFBDQSAyMDEw
// SIG // MIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEA
// SIG // 5OGmTOe0ciELeaLL1yR5vQ7VgtP97pwHB9KpbE51yMo1
// SIG // V/YBf2xK4OK9uT4XYDP/XE/HZveVU3Fa4n5KWv64NmeF
// SIG // RiMMtY0Tz3cywBAY6GB9alKDRLemjkZrBxTzxXb1hlDc
// SIG // wUTIcVxRMTegCjhuje3XD9gmU3w5YQJ6xKr9cmmvHaus
// SIG // 9ja+NSZk2pg7uhp7M62AW36MEBydUv626GIl3GoPz130
// SIG // /o5Tz9bshVZN7928jaTjkY+yOSxRnOlwaQ3KNi1wjjHI
// SIG // NSi947SHJMPgyY9+tVSP3PoFVZhtaDuaRr3tpK56KTes
// SIG // y+uDRedGbsoy1cCGMFxPLOJiss254o2I5JasAUq7vnGp
// SIG // F1tnYN74kpEeHT39IM9zfUGaRnXNxF803RKJ1v2lIH1+
// SIG // /NmeRd+2ci/bfV+AutuqfjbsNkz2K26oElHovwUDo9Fz
// SIG // pk03dJQcNIIP8BDyt0cY7afomXw/TNuvXsLz1dhzPUNO
// SIG // wTM5TI4CvEJoLhDqhFFG4tG9ahhaYQFzymeiXtcodgLi
// SIG // Mxhy16cg8ML6EgrXY28MyTZki1ugpoMhXV8wdJGUlNi5
// SIG // UPkLiWHzNgY1GIRH29wb0f2y1BzFa/ZcUlFdEtsluq9Q
// SIG // BXpsxREdcu+N+VLEhReTwDwV2xo3xwgVGD94q0W29R6H
// SIG // XtqPnhZyacaue7e3PmriLq0CAwEAAaOCAd0wggHZMBIG
// SIG // CSsGAQQBgjcVAQQFAgMBAAEwIwYJKwYBBAGCNxUCBBYE
// SIG // FCqnUv5kxJq+gpE8RjUpzxD/LwTuMB0GA1UdDgQWBBSf
// SIG // pxVdAF5iXYP05dJlpxtTNRnpcjBcBgNVHSAEVTBTMFEG
// SIG // DCsGAQQBgjdMg30BATBBMD8GCCsGAQUFBwIBFjNodHRw
// SIG // Oi8vd3d3Lm1pY3Jvc29mdC5jb20vcGtpb3BzL0RvY3Mv
// SIG // UmVwb3NpdG9yeS5odG0wEwYDVR0lBAwwCgYIKwYBBQUH
// SIG // AwgwGQYJKwYBBAGCNxQCBAweCgBTAHUAYgBDAEEwCwYD
// SIG // VR0PBAQDAgGGMA8GA1UdEwEB/wQFMAMBAf8wHwYDVR0j
// SIG // BBgwFoAU1fZWy4/oolxiaNE9lJBb186aGMQwVgYDVR0f
// SIG // BE8wTTBLoEmgR4ZFaHR0cDovL2NybC5taWNyb3NvZnQu
// SIG // Y29tL3BraS9jcmwvcHJvZHVjdHMvTWljUm9vQ2VyQXV0
// SIG // XzIwMTAtMDYtMjMuY3JsMFoGCCsGAQUFBwEBBE4wTDBK
// SIG // BggrBgEFBQcwAoY+aHR0cDovL3d3dy5taWNyb3NvZnQu
// SIG // Y29tL3BraS9jZXJ0cy9NaWNSb29DZXJBdXRfMjAxMC0w
// SIG // Ni0yMy5jcnQwDQYJKoZIhvcNAQELBQADggIBAJ1Vffwq
// SIG // reEsH2cBMSRb4Z5yS/ypb+pcFLY+TkdkeLEGk5c9MTO1
// SIG // OdfCcTY/2mRsfNB1OW27DzHkwo/7bNGhlBgi7ulmZzpT
// SIG // Td2YurYeeNg2LpypglYAA7AFvonoaeC6Ce5732pvvinL
// SIG // btg/SHUB2RjebYIM9W0jVOR4U3UkV7ndn/OOPcbzaN9l
// SIG // 9qRWqveVtihVJ9AkvUCgvxm2EhIRXT0n4ECWOKz3+SmJ
// SIG // w7wXsFSFQrP8DJ6LGYnn8AtqgcKBGUIZUnWKNsIdw2Fz
// SIG // Lixre24/LAl4FOmRsqlb30mjdAy87JGA0j3mSj5mO0+7
// SIG // hvoyGtmW9I/2kQH2zsZ0/fZMcm8Qq3UwxTSwethQ/gpY
// SIG // 3UA8x1RtnWN0SCyxTkctwRQEcb9k+SS+c23Kjgm9swFX
// SIG // SVRk2XPXfx5bRAGOWhmRaw2fpCjcZxkoJLo4S5pu+yFU
// SIG // a2pFEUep8beuyOiJXk+d0tBMdrVXVAmxaQFEfnyhYWxz
// SIG // /gq77EFmPWn9y8FBSX5+k77L+DvktxW/tM4+pTFRhLy/
// SIG // AsGConsXHRWJjXD+57XQKBqJC4822rpM+Zv/Cuk0+CQ1
// SIG // ZyvgDbjmjJnW4SLq8CdCPSWU5nR0W2rRnj7tfqAxM328
// SIG // y+l7vzhwRNGQ8cirOoo6CGJ/2XBjU02N7oJtpQUQwXEG
// SIG // ahC0HVUzWLOhcGbyoYIDTTCCAjUCAQEwgfmhgdGkgc4w
// SIG // gcsxCzAJBgNVBAYTAlVTMRMwEQYDVQQIEwpXYXNoaW5n
// SIG // dG9uMRAwDgYDVQQHEwdSZWRtb25kMR4wHAYDVQQKExVN
// SIG // aWNyb3NvZnQgQ29ycG9yYXRpb24xJTAjBgNVBAsTHE1p
// SIG // Y3Jvc29mdCBBbWVyaWNhIE9wZXJhdGlvbnMxJzAlBgNV
// SIG // BAsTHm5TaGllbGQgVFNTIEVTTjpFMDAyLTA1RTAtRDk0
// SIG // NzElMCMGA1UEAxMcTWljcm9zb2Z0IFRpbWUtU3RhbXAg
// SIG // U2VydmljZaIjCgEBMAcGBSsOAwIaAxUA4hxFugmt5+QY
// SIG // GVf7UP3wkdPU3/eggYMwgYCkfjB8MQswCQYDVQQGEwJV
// SIG // UzETMBEGA1UECBMKV2FzaGluZ3RvbjEQMA4GA1UEBxMH
// SIG // UmVkbW9uZDEeMBwGA1UEChMVTWljcm9zb2Z0IENvcnBv
// SIG // cmF0aW9uMSYwJAYDVQQDEx1NaWNyb3NvZnQgVGltZS1T
// SIG // dGFtcCBQQ0EgMjAxMDANBgkqhkiG9w0BAQsFAAIFAOjd
// SIG // DkcwIhgPMjAyMzEwMjAxNDMzNDNaGA8yMDIzMTAyMTE0
// SIG // MzM0M1owdDA6BgorBgEEAYRZCgQBMSwwKjAKAgUA6N0O
// SIG // RwIBADAHAgEAAgIXWjAHAgEAAgITnzAKAgUA6N5fxwIB
// SIG // ADA2BgorBgEEAYRZCgQCMSgwJjAMBgorBgEEAYRZCgMC
// SIG // oAowCAIBAAIDB6EgoQowCAIBAAIDAYagMA0GCSqGSIb3
// SIG // DQEBCwUAA4IBAQAlyKoFZDQebzs6XVy5bvmGQAD02K8p
// SIG // sIX5/clUV6vjOnuSgJqGbNK2T9KqkhwZGAqYmOOxHMvV
// SIG // mo9Dx5tno2pYr2BwHc6kgSiR0WFW/GQBLhSfelmlHJvu
// SIG // NFgfmw+pslG7NepOseQtoMTbOqlIjbsHi3cQnMj1TIOE
// SIG // Ow6q7FBmGfwwYZ+HaYtkfX8NpewZX4/HAadzuTPQOfWo
// SIG // 1uJeY3RWO+X8l1GZ5GXoc4wvyR8E75dGD9py1ohry1wQ
// SIG // OJdF/buqqGo18Ki68dK7x5UifETATw+9vxkpebdrngE6
// SIG // hCuRmDKVFkKHF1NEVuvU2aXxUbSPzInzPRjSUWdNmyjU
// SIG // BTkuMYIEDTCCBAkCAQEwgZMwfDELMAkGA1UEBhMCVVMx
// SIG // EzARBgNVBAgTCldhc2hpbmd0b24xEDAOBgNVBAcTB1Jl
// SIG // ZG1vbmQxHjAcBgNVBAoTFU1pY3Jvc29mdCBDb3Jwb3Jh
// SIG // dGlvbjEmMCQGA1UEAxMdTWljcm9zb2Z0IFRpbWUtU3Rh
// SIG // bXAgUENBIDIwMTACEzMAAAHZnFwFkrCDaz4AAQAAAdkw
// SIG // DQYJYIZIAWUDBAIBBQCgggFKMBoGCSqGSIb3DQEJAzEN
// SIG // BgsqhkiG9w0BCRABBDAvBgkqhkiG9w0BCQQxIgQgBp0A
// SIG // s5Ahl3VUsUpkApc5rH/JrbiHJ+yP5xIFAdjtkCIwgfoG
// SIG // CyqGSIb3DQEJEAIvMYHqMIHnMIHkMIG9BCCfoBWyLTpv
// SIG // 1DAwJxE82yXtLtA1ndjIKYG9EnG0IAd58zCBmDCBgKR+
// SIG // MHwxCzAJBgNVBAYTAlVTMRMwEQYDVQQIEwpXYXNoaW5n
// SIG // dG9uMRAwDgYDVQQHEwdSZWRtb25kMR4wHAYDVQQKExVN
// SIG // aWNyb3NvZnQgQ29ycG9yYXRpb24xJjAkBgNVBAMTHU1p
// SIG // Y3Jvc29mdCBUaW1lLVN0YW1wIFBDQSAyMDEwAhMzAAAB
// SIG // 2ZxcBZKwg2s+AAEAAAHZMCIEIPUOVde2gAWjKyuqhiqZ
// SIG // lCJPYyMfrswf0/G6vlVRSyHRMA0GCSqGSIb3DQEBCwUA
// SIG // BIICAFe9rdVDy6IGqkHlM/L64FSkADKQ+Lpi2KfjN5Nj
// SIG // oiA8eeeAUnngonor6q3xJKDiVyd4nfscIzqJUBjLj7be
// SIG // v/qhhm3aQMJLKb7dOAyA8EaKAvINDAmvGn9pZeVDwKYx
// SIG // 6O0cm6waKzYNDA4Z4c+CTdMwn1p76d0d35ed1k0T1H06
// SIG // V8/dBicl6yDuySjXAtc7qUfRgOv2R0ZyTJ1i56DIYXHE
// SIG // G9nJRqfV5XWSBBh1fFd3kERNr0yCOiZ/7cmwvZX33L0b
// SIG // q28p2yftOMTPdEJ8BdLbIYkXJqcxlu7TL1e3DxuVnKPe
// SIG // F4CYOEuGFc5LY9KwKT26d78ngRgf/bmnUOA2UovZJPIv
// SIG // VnuNDCb4n5jwEkSvQDMpnALSlh67YRDRKT/RQ4mcUMgS
// SIG // OAadSZ9L4PV/UQx3Pt1ECusoxioeXlmHAmUikIgXJRvE
// SIG // dlVcRVVOEtzQRX3rvuxD0cwIkuDovhWGb8879BzD5HxV
// SIG // 7pVIZVeOjVWQVIswi7rE/PjvwVo5tYwjhfByVPqza+Fr
// SIG // C6fwguTrp2kk4ct5wPGRk5t950onfbLMnwL1NuwXIK8P
// SIG // gZQNUHL1yIfXuLKN+LoIO+wU8jTVmS7GFlxjIm3y+9Rr
// SIG // FlHPePT81n9iguWIePSGn1LzTCJDGAqa7KxC8pVHhX2g
// SIG // ySXdCSNAe1WYayeJ0yhvwiBPiF6f
// SIG // End signature block
