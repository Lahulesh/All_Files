define("dotNetObjectAllocSwimlane",["diagnosticsHub","diagnosticsHub-swimlanes","plugin-vs-v2"],((e,t,i)=>{return a={952:(e,t,i)=>{var a;a=function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.InsightsViewId=t.ActiveCollectionViewId=t.FunctionListDetailsViewId=t.CallTreeDetailsViewId=t.DotNetAllocAnalyzerId=t.AllocationDetailsViewId=t.CollectionDetailsViewId=void 0,t.CollectionDetailsViewId=function(){return"2AB6F58C-F91F-4436-8D49-0C6E0F5E9657"},t.AllocationDetailsViewId=function(){return"A4C18565-9849-44E4-A6B0-9E9487D2024E"},t.DotNetAllocAnalyzerId=function(){return"DEF9F958-0E21-4364-8DD3-1CFB0C57FC7D"},t.CallTreeDetailsViewId=function(){return"A0A01775-6F3D-4B01-BFBE-FDD0F1F33EA4"},t.FunctionListDetailsViewId=function(){return"3ECF896D-96DC-4348-8A5C-6A853AA5C8CC"},t.ActiveCollectionViewId=function(){return"5979F2F4-B01D-4A63-AAE4-CE5C611EE4F8"},t.InsightsViewId=function(){return"5B496FFD-A4E8-48C1-BF62-F8435DFAD24C"}}.apply(t,[i,t]),void 0===a||(e.exports=a)},3766:(e,t,i)=>{var a,s;a=[i,t,i(3432),i(8117)],s=function(e,t,i,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.DotNetObjectAllocMarshaler=void 0;let s=null;t.DotNetObjectAllocMarshaler=class{constructor(){null===s&&(s=i.JSONMarshaler.attachToMarshaledObject("Microsoft.DiagnosticsHub.Tools.DotNetObjectAllocation.DotNetObjectAllocationMarshaler",{},!0)),this._onGoToAllocation=new a.ObservableEvent(s,"onGoToAllocation"),this._onCrossReferenceEvent=new a.ObservableEvent(s,"onCrossReferenceEvent"),this._graphHighlightEvent=new a.ObservableEvent(s,"GraphHighlightChangedEvent"),this._updateNativeCodeEvent=new a.ObservableEvent(s,"updateNativeCodeEvent"),this._updateCollectionEvent=new a.ObservableEvent(s,"updateCollectionEvent")}get onGoToAllocation(){return this._onGoToAllocation}goToAllocation(e){return s._call("goToAllocation",e)}get onCrossReferenceEvent(){return this._onCrossReferenceEvent}crossReference(e){return s._call("crossReference",e)}updateGraphHighlight(e){return s._call("raiseGraphHighlightChangedEvent",e)}clearGraphHighlight(){return s._call("clearGraphHighlight")}get graphHighlightEvent(){return this._graphHighlightEvent}graphHighlightingFeatureEnabled(){return s._call("graphHighlightingFeatureEnabled")}getDoubleClickTimeMs(){return s._call("getDoubleClickTimeMs")}isNativeCodeFoldingEnabled(){return s._call("isNativeCodeFoldingEnabled")}setNativeCodeFoldingEnabled(e){return s._call("setNativeCodeFolding",{isEnabled:e})}get onUpdateNativeCodeFolding(){return this._updateNativeCodeEvent}getColumnSettings(e){return s._call("getColumnSettings",e)}onColumnChanged(e,t){return s._call("onColumnChanged",e,t)}get onUpdateCollection(){return this._updateCollectionEvent}isCollectionEnabled(){return s._call("isCollectionEnabled")}isGlobalCollectionEnabled(){return s._call("isStartPausedSupported")}isPauseResumeSupported(){return s._call("isPauseResumeSupported")}setCollectionEnabled(e){return s._call("setCollectionEnabled",e)}openLink(e){return s._call("openLink",e)}isTopInsightsSupported(){return s._call("isTopInsightsSupported")}}}.apply(t,a),void 0===s||(e.exports=s)},4557:(e,t,i)=>{var a,s;a=[i,t,i(3432),i(2560),i(2560),i(8117),i(8117)],s=function(e,t,i,a,s,n,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.DeltaChartSeries=void 0,t.DeltaChartSeries=class{constructor(e,t){this._newDataEvent=new n.AggregatedEvent,this._dataSeries=e,this._resources=t,this._graphStrokeColor=i.Theme.getValue("diagnostics-host-graph-line"),this._marker=document.createElement("div"),this._onNewDataBoundFunction=()=>this._newDataEvent.invokeEvent(this),this._dataSeries.newDataEvent.addEventListener(this._onNewDataBoundFunction),this._onThemeChangedBoundFunction=()=>this.onThemeChanged(),i.Theme.addEventListener("themechanged",this._onThemeChangedBoundFunction)}get minValue(){return-100}get maxValue(){return 100}get marker(){return this._marker}get title(){return this._resources.CollectedObjectLineSeries}get tooltip(){return""}get newDataEvent(){return this._newDataEvent}dispose(){this._dataSeries.newDataEvent.removeEventListener(this._onNewDataBoundFunction),i.Theme.removeEventListener("themechanged",this._onThemeChangedBoundFunction),this._newDataEvent.dispose()}onViewportChanged(e){this._dataSeries.onViewportChanged(e)}onDataUpdate(e){this._dataSeries.onDataUpdate(e)}getPointAtTimestamp(e,t=a.PointToFind.Nearest){if(0===this._dataSeries.cachedPoints.length)return null;const n=this._dataSeries.getIndexOfTimestamp(e,a.PointToFind.Nearest),o=0!==n?n-1:n,l=n<this._dataSeries.cachedPoints.length-1?n+1:n,h=r.BigNumber.subtract(this._dataSeries.cachedPoints[n].Timestamp,this._dataSeries.cachedPoints[o].Timestamp),d=r.BigNumber.add(this._dataSeries.cachedPoints[o].Timestamp,r.BigNumber.divideNumber(h,2)),c=0!==this._dataSeries.cachedPoints[o].Value?(this._dataSeries.cachedPoints[n].Value-this._dataSeries.cachedPoints[o].Value)/this._dataSeries.cachedPoints[o].Value*100:0,u=r.BigNumber.subtract(this._dataSeries.cachedPoints[l].Timestamp,this._dataSeries.cachedPoints[n].Timestamp),m=r.BigNumber.add(this._dataSeries.cachedPoints[n].Timestamp,r.BigNumber.divideNumber(u,2)),g=0!==this._dataSeries.cachedPoints[n].Value?(this._dataSeries.cachedPoints[l].Value-this._dataSeries.cachedPoints[n].Value)/this._dataSeries.cachedPoints[n].Value*100:0;let p,_;switch(t){case a.PointToFind.LessThanOrEqual:p=c,_=d;break;case a.PointToFind.GreaterThanOrEqual:p=g,_=m;break;case a.PointToFind.Nearest:e.greaterOrEqual(this._dataSeries.cachedPoints[n].Timestamp)?(p=g,_=m):(p=c,_=d)}return p>this.maxValue?{value:this.maxValue,timestamp:_,tooltip:s.Utilities.formatString(this._resources.DeltaAllocTooltipTooLarge,(this.maxValue/100).toLocaleString(i.Culture.formatRegion,{style:"percent",minimumFractionDigits:2}))}:p<this.minValue?{value:this.minValue,timestamp:_,tooltip:s.Utilities.formatString(this._resources.DeltaAllocTooltipTooSmall,(this.minValue/100).toLocaleString(i.Culture.formatRegion,{style:"percent",minimumFractionDigits:2}))}:{value:p,timestamp:_,tooltip:s.Utilities.formatString(this._resources.DeltaAllocTooltipValue,(p/100).toLocaleString(i.Culture.formatRegion,{style:"percent",minimumFractionDigits:2}))}}draw(e,t){if(0===this._dataSeries.cachedPoints.length||t.gridX.elapsed.equals(r.BigNumber.zero)||t.chartRect.width<=0)return;this._dataSeries.sampleCount=t.chartRect.width/2;const i=e=>s.Utilities.convertToPixel(e,t.gridX,t.chartRect.width,!1),a=e=>t.chartRect.height-s.Utilities.scaleToRange(e,t.gridY.min,t.gridY.max,0,t.chartRect.height);e.save(),e.lineWidth=1;const n=a(0);let o=i(this._dataSeries.cachedPoints[0].Timestamp),l=this._dataSeries.cachedPoints[0].Value;this._dataSeries.cachedPoints.forEach((t=>{const s=i(t.Timestamp),r=0!==l?(t.Value-l)/l*100:0,h=Math.floor(a(r)-n),d=h<0?"rgb(113,178,82)":"rgb(191,63,0)";e.fillStyle=d,e.strokeStyle=d,e.fillRect(o,n,s-o,h),o=s,l=t.Value})),e.strokeStyle=this._graphStrokeColor,e.setLineDash([1,1]),e.beginPath(),e.moveTo(0,n),e.lineTo(t.chartRect.width,n),e.stroke(),e.restore()}onThemeChanged(){this._graphStrokeColor=i.Theme.getValue("diagnostics-host-graph-line")}}}.apply(t,a),void 0===s||(e.exports=s)},8610:(e,t,i)=>{var a,s;a=[i,t,i(2560),i(2560),i(2560),i(2560),i(8117),i(8117),i(8117),i(8117)],s=function(e,t,i,a,s,n,r,o,l,h){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.EnabledDataSeries=void 0;class d{constructor(e,t,i){this._logger=l.getLogger("EnabledDataSeries"),this._enabledAtStart=!1,this._toggleEvents=[],this._dataWarehouseRequestHandle=1,this._droppedRequest=!1,this._newDataEvent=new r.AggregatedEvent,this._colorScheme=new n.ChartColorScheme("#92AB00","#AECD00"),this._title=i,this._tooltip=i,this._marker=document.createElement("div"),this._marker.classList.add("countersDataSeries-marker"),this._marker.style.backgroundColor=this._colorScheme.lineColor,this._marker.style.width=2*d.PointRadiusInPixels+"px",this._marker.style.height=2*d.PointRadiusInPixels+"px",this._sampledDataSeries=e,this._enabledAtStart=t,o.loadDataWarehouse().then((e=>{const t={customDomain:{CounterId:d.counterId}};return e.getFilteredData(t,d.analyzerId)})).then((e=>{this._countersResult=e})).then((()=>{this._dataWarehouseRequestHandle=null,this._droppedRequest=!1,this.requestUpdate()}))}static get counterId(){return"DotNetAlloc.Counters.CollectionEnabled"}static get analyzerId(){return"66EDDDF1-2277-40F3-983A-6FF57A433ECB"}get minValue(){return Number.NaN}get maxValue(){return Number.NaN}get tooltip(){return this._tooltip}get title(){return this._title}get marker(){return this._marker}get newDataEvent(){return this._newDataEvent}dispose(){this._countersResult.dispose(),this._newDataEvent.dispose()}onViewportChanged(e){}getPointAtTimestamp(e,t=a.PointToFind.Nearest){if(0===this._sampledDataSeries.cachedPoints.length||0===this._toggleEvents.length&&!this._enabledAtStart)return null;let i={Timestamp:e,Value:0};const n=(e,t)=>t.Timestamp.greater(e.Timestamp);let r=!0;if(0!==this._toggleEvents.length){const t=s.Utilities.findLessThan(this._toggleEvents,i,n);this._toggleEvents[t].Timestamp.greater(e)?r=this._enabledAtStart:0===this._toggleEvents[t].Value&&(r=!1)}if(!r)return null;const o=this.getPointIndex(this._sampledDataSeries.cachedPoints,i.Timestamp,0,this._sampledDataSeries.cachedPoints.length-1,t);return i=this._sampledDataSeries.cachedPoints[o],{timestamp:i.Timestamp,tooltip:this._tooltip,value:i.Value,color:this._colorScheme}}onDataUpdate(e){this.requestUpdate()}draw(e,t){if(0===this._sampledDataSeries.cachedPoints.length||0===t.chartRect.width)return;let i=0,s=this._sampledDataSeries.cachedPoints.length-1,n=this._enabledAtStart;e.save(),e.lineWidth=t.chartRect.height<100?1:2,e.fillStyle=this._colorScheme.lineFillColor,e.strokeStyle=this._colorScheme.lineColor,this._toggleEvents.forEach((r=>{r.Value>.5?(i=this.getPointIndex(this._sampledDataSeries.cachedPoints,r.Timestamp,0,this._sampledDataSeries.cachedPoints.length-1,a.PointToFind.Nearest),n=!0):(s=this.getPointIndex(this._sampledDataSeries.cachedPoints,r.Timestamp,0,this._sampledDataSeries.cachedPoints.length-1,a.PointToFind.Nearest),n=!1,this.drawBetween(e,t,i,s))})),n&&(s=this._sampledDataSeries.cachedPoints.length-1,this.drawBetween(e,t,i,s)),e.restore()}drawBetween(e,t,i,a){const n=e=>t.chartRect.height-s.Utilities.scaleToRange(e,t.gridY.min,t.gridY.max,0,t.chartRect.height),r=e=>s.Utilities.convertToPixel(e,t.gridX,t.chartRect.width,!1);e.beginPath();for(let t=i;t<=a;++t)e.lineTo(r(this._sampledDataSeries.cachedPoints[t].Timestamp),n(this._sampledDataSeries.cachedPoints[t].Value));e.stroke(),e.lineTo(r(this._sampledDataSeries.cachedPoints[a].Timestamp),n(t.gridY.min)),e.lineTo(r(this._sampledDataSeries.cachedPoints[i].Timestamp),t.chartRect.height),e.closePath(),e.fill();const o=h.BigNumber.divideNumber(t.gridX.elapsed,t.chartRect.width);if(h.BigNumber.convertFromNumber(d.CounterFrequencyPerPixel).greater(o))for(let t=i;t<=a;++t)e.beginPath(),e.arc(r(this._sampledDataSeries.cachedPoints[t].Timestamp),n(this._sampledDataSeries.cachedPoints[t].Value),d.PointRadiusInPixels,0,2*Math.PI),e.fill()}requestUpdate(){this._dataWarehouseRequestHandle?this._droppedRequest=!0:this._dataWarehouseRequestHandle=window.setTimeout((()=>{this._countersResult.getResult(null).then((e=>this.cachePoints(e))).then((()=>{this._dataWarehouseRequestHandle=null,this._droppedRequest&&(window.setTimeout((()=>this.requestUpdate()),i.Constants.TimeoutImmediate),this._droppedRequest=!1)}),(e=>{this._logger.error(`Error occurred while communicating with the DataWarehouse: ${JSON.stringify(e,Object.getOwnPropertyNames(e))}`)}))}),i.Constants.TimeoutImmediate)}cachePoints(e){e.p.forEach((e=>{this._toggleEvents.push({Timestamp:new h.BigNumber(e.t.h,e.t.l),Value:e.v,ToolTip:e.tt})})),this._newDataEvent.invokeEvent(this)}getPointIndex(e,t,i,n,r){const o=(e,t)=>t.Timestamp.greater(e.Timestamp),l={Timestamp:t,Value:0};switch(r){case a.PointToFind.LessThanOrEqual:return s.Utilities.findLessThan(e,l,o,i,n);case a.PointToFind.GreaterThanOrEqual:return s.Utilities.findGreaterThan(e,l,o,i,n);case a.PointToFind.Nearest:default:{i=s.Utilities.findLessThan(e,l,o),n=Math.min(i+1,e.length-1);const a=h.BigNumber.subtract(t,e[i].Timestamp),r=h.BigNumber.subtract(e[n].Timestamp,t);return a.greater(r)?n:i}}}}t.EnabledDataSeries=d,d.PointRadiusInPixels=2.5,d.CounterFrequencyPerPixel=1e8/(2*d.PointRadiusInPixels+4)}.apply(t,a),void 0===s||(e.exports=s)},3672:(e,t,i)=>{var a,s;a=[i,t,i(2560),i(2560),i(2560),i(2560),i(8117),i(8117),i(8117),i(8117),i(8117),i(952),i(3766)],s=function(e,t,i,a,s,n,r,o,l,h,d,c,u){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.HighlightDataSeries=void 0;class m{constructor(e,t,i){this._logger=l.getLogger("HighlightDataSeries"),this._samples=200,this._timestamps=[],this._currentResult=null,this._dataWarehouseRequestHandle=1,this._droppedRequest=!1,this._marshaler=new u.DotNetObjectAllocMarshaler,this._onHighlightChangedHandler=this.onHighlightChanged.bind(this),this._newDataEvent=new r.AggregatedEvent,this._viewEventManager=h.getViewEventManager(),this._colorScheme=new n.ChartColorScheme("#903F8B","#903F8B"),this._title=i,this._tooltip=i,this._marker=document.createElement("div"),this._marker.style.backgroundColor=this._colorScheme.lineColor,this._marker.style.width="1px",this._marker.style.height="100%",this._sampledDataSeries=e,this._currentTimespan=t,this._marshaler.graphHighlightEvent.addEventListener(this._onHighlightChangedHandler),this._viewEventManager.detailsViewSelectionChanged.addEventListener(void this._marshaler.clearGraphHighlight),this._marshaler.graphHighlightingFeatureEnabled().then((e=>{this._graphHighlightingFeatureEnabled=e,this._graphHighlightingFeatureEnabled&&o.loadDataWarehouse().then((e=>{const t={timeDomain:this._currentTimespan,customDomain:{view:"Timestamps"}};e.getFilteredData(t,c.DotNetAllocAnalyzerId()).then((e=>{this._currentResult=e;const t=this._droppedRequest;this._droppedRequest=!1,this._dataWarehouseRequestHandle=null,t&&this.requestUpdate()}))}))}))}onHighlightChanged(e){this._typeId=null===e?-1:e.typeId,this.requestUpdate()}get minValue(){return Number.NaN}get maxValue(){return Number.NaN}get tooltip(){return this._tooltip}get title(){return this._title}get marker(){return this._marker}get newDataEvent(){return this._newDataEvent}dispose(){this._marshaler.graphHighlightEvent.removeEventListener(this._onHighlightChangedHandler),this._viewEventManager.detailsViewSelectionChanged.removeEventListener(void this._marshaler.clearGraphHighlight),this._newDataEvent.dispose()}onViewportChanged(e){this._currentTimespan=e,this.requestUpdate()}onDataUpdate(e){this.requestUpdate()}getPointAtTimestamp(e,t=a.PointToFind.Nearest){if(0===this._timestamps.length)return null;const i=this.getOccurrencePointIndex(this._timestamps,e,0,this._timestamps.length-1,t);return{timestamp:this._timestamps[i],tooltip:this._tooltip,value:Number.NaN,color:this._colorScheme}}draw(e,t){if(0===this._timestamps.length||t.gridX.elapsed.equals(d.BigNumber.zero)||t.chartRect.width<=0)return;2*t.chartRect.width!==this._samples&&(this._samples=2*t.chartRect.width,this.requestUpdate()),e.save(),e.lineWidth=1,e.fillStyle=this._colorScheme.lineFillColor,e.strokeStyle=this._colorScheme.lineColor;const i=e=>s.Utilities.convertToPixel(e,t.gridX,t.chartRect.width,!1),n=e=>t.chartRect.height-s.Utilities.scaleToRange(e,t.gridY.min,t.gridY.max,0,t.chartRect.height);this._timestamps.forEach((s=>{const r=i(s),o=this.getDataSeriesPointAtTimestamp(s,a.PointToFind.LessThanOrEqual),l=this.getDataSeriesPointAtTimestamp(s,a.PointToFind.GreaterThanOrEqual);if(!o||!l)return;const h=i(o.timestamp),d=n(o.value),c=i(l.timestamp),u=n(l.value),m={x:r,y:n(t.gridY.max)};if(h!==c){const e=(u-d)/(c-h);m.y=d+e*(r-h)}e.beginPath(),e.moveTo(m.x+.5,n(t.gridY.min)),e.lineTo(m.x+.5,m.y),e.stroke(),e.closePath()})),e.restore()}getDataSeriesPointAtTimestamp(e,t=a.PointToFind.Nearest){if(0===this._sampledDataSeries.cachedPoints.length)return null;const i=this._sampledDataSeries.getIndexOfTimestamp(e,t),s=this._sampledDataSeries.cachedPoints[i];return{timestamp:s.Timestamp,tooltip:null,value:s.Value}}requestUpdate(){this._graphHighlightingFeatureEnabled&&(this._dataWarehouseRequestHandle?this._droppedRequest=!0:this._dataWarehouseRequestHandle=window.setTimeout((()=>{if(this._currentTimespan.elapsed.equals(d.BigNumber.zero))return void(this._dataWarehouseRequestHandle=null);const e=d.BigNumber.divideNumber(this._currentTimespan.elapsed,2),t=d.BigNumber.subtract(this._currentTimespan.begin,d.BigNumber.min(e,this._currentTimespan.begin)),a=d.BigNumber.multiply(d.BigNumber.divide(t,this._currentTimespan.elapsed),this._currentTimespan.elapsed),s=d.BigNumber.add(a,d.BigNumber.multiplyNumber(this._currentTimespan.elapsed,3)),n=this._currentResult,r=this._typeId;Promise.resolve(null!==n).then((e=>e?r<0?m.EmptyOccurrencesDto:n.getResult({task:"getTimestamps",typeId:r,begin:a.jsonValue,end:s.jsonValue,samples:Math.max(this._samples,1)}):(this._droppedRequest=!0,m.EmptyOccurrencesDto))).then((e=>{this._timestamps=e.timestamps.map((e=>new d.BigNumber(e.h,e.l))),this._newDataEvent.invokeEvent(this)})).then((()=>{this._dataWarehouseRequestHandle=null,this._droppedRequest&&(window.setTimeout((()=>this.requestUpdate()),i.Constants.TimeoutImmediate),this._droppedRequest=!1)}),(e=>{this._logger.error(`Error occurred while communicating with the DataWarehouse: ${JSON.stringify(e,Object.getOwnPropertyNames(e))}`)}))}),i.Constants.TimeoutImmediate))}getOccurrencePointIndex(e,t,i,n,r){const o=(e,t)=>t.greater(e);switch(r){case a.PointToFind.LessThanOrEqual:return s.Utilities.findLessThan(e,t,o,i,n);case a.PointToFind.GreaterThanOrEqual:return s.Utilities.findGreaterThan(e,t,o,i,n);case a.PointToFind.Nearest:default:{i=s.Utilities.findLessThan(e,t,o),n=Math.min(i+1,e.length-1);const a=d.BigNumber.subtract(t,e[i]),r=d.BigNumber.subtract(e[n],t);return a.greater(r)?n:i}}}}t.HighlightDataSeries=m,m.EmptyOccurrencesDto={timestamps:[]}}.apply(t,a),void 0===s||(e.exports=s)},1497:(e,t,i)=>{var a,s;a=[i,t,i(3432),i(2560),i(2560),i(2560),i(8117),i(8117)],s=function(e,t,i,a,s,n,r,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.LineChartSeries=void 0;class l{constructor(e,t,i,a){this._newDataEvent=new r.AggregatedEvent,this._dataSeries=e,this._title=i,this._tooltip=a,this._unitConverter=t,this._colorScheme=new n.ChartColorScheme("rgb(118, 174, 200)","rgba(118, 174, 200, 0.65)"),this._marker=document.createElement("div"),this._marker.classList.add("countersDataSeries-marker"),this._marker.style.backgroundColor=this._colorScheme.lineColor,this._marker.style.width=2*l.PointRadiusInPixels+"px",this._marker.style.height=2*l.PointRadiusInPixels+"px",this._onNewDataBoundFunction=()=>this._newDataEvent.invokeEvent(this),this._dataSeries.newDataEvent.addEventListener(this._onNewDataBoundFunction)}get minValue(){return this._dataSeries.minValue}get maxValue(){return this._dataSeries.maxValue}get marker(){return this._marker}get title(){return this._title}get tooltip(){return this._tooltip}get newDataEvent(){return this._newDataEvent}dispose(){this._dataSeries.newDataEvent.removeEventListener(this._onNewDataBoundFunction),this._newDataEvent.dispose(),this._dataSeries.dispose()}onViewportChanged(e){this._dataSeries.onViewportChanged(e)}onDataUpdate(e){this._dataSeries.onDataUpdate(e)}getPointAtTimestamp(e,t=a.PointToFind.Nearest){if(0===this._dataSeries.cachedPoints.length)return null;const s=this._dataSeries.getIndexOfTimestamp(e,t),n=this._dataSeries.cachedPoints[s];return{timestamp:n.Timestamp,tooltip:i.Resources.getString("/DiagnosticsHubSwimlaneResources/ChartSeriesFormattableTooltipLabel",this._unitConverter.formatNumber(n.Value,i.Resources.getString("/DiagnosticsHubSwimlaneResources/ChartSeriesFormattableTooltipLabelNumberWithUnit"),null,!0)),value:n.Value}}draw(e,t){if(0===this._dataSeries.cachedPoints.length||t.gridX.elapsed.equals(o.BigNumber.zero)||t.chartRect.width<=0)return;this._dataSeries.sampleCount=t.chartRect.width/2;const i=e=>t.chartRect.height-s.Utilities.scaleToRange(e,t.gridY.min,t.gridY.max,0,t.chartRect.height),a=e=>s.Utilities.convertToPixel(e,t.gridX,t.chartRect.width,!1);e.save(),e.lineWidth=t.chartRect.height<100?1:2,e.fillStyle=this._colorScheme.lineFillColor,e.strokeStyle=this._colorScheme.lineColor;const n=a(this._dataSeries.cachedPoints[0].Timestamp);e.beginPath(),e.moveTo(n,i(this._dataSeries.cachedPoints[0].Value)),this._dataSeries.cachedPoints.forEach((t=>e.lineTo(a(t.Timestamp),i(t.Value)))),e.stroke(),e.lineTo(a(this._dataSeries.cachedPoints[this._dataSeries.cachedPoints.length-1].Timestamp),i(t.gridY.min)),e.lineTo(n,t.chartRect.height),e.closePath(),e.fill();const r=o.BigNumber.divideNumber(t.gridX.elapsed,t.chartRect.width);o.BigNumber.convertFromNumber(l.CounterFrequencyPerPixel).greater(r)&&this._dataSeries.cachedPoints.forEach((t=>{e.beginPath(),e.arc(a(t.Timestamp),i(t.Value),l.PointRadiusInPixels,0,2*Math.PI),e.fill()})),e.restore()}}t.LineChartSeries=l,l.PointRadiusInPixels=2.5,l.CounterFrequencyPerPixel=1e8/(2*l.PointRadiusInPixels+4)}.apply(t,a),void 0===s||(e.exports=s)},1431:(e,t,i)=>{var a,s;a=[i,t,i(2560),i(2560),i(2560),i(8117),i(8117),i(8117),i(8117)],s=function(e,t,i,a,s,n,r,o,l){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.SampledDataSeries=void 0;class h{constructor(e){this._logger=o.getLogger("SampledDataSeries"),this._samples=200,this._cachedPoints=[],this._dataWarehouseRequestHandle=1,this._droppedRequest=!1,this._seriesMin=0,this._seriesMax=0,this._newDataEvent=new n.AggregatedEvent,this._currentTimespan=e,r.loadDataWarehouse().then((e=>e.getFilteredData({customDomain:{Task:"GetCounter",CounterId:"DotNetAlloc.Counters.LiveObjects"}},h.analyzerId))).then((e=>{this._countersResult=e})).then((()=>{this._dataWarehouseRequestHandle=null,this._droppedRequest=!1,this.requestUpdate()}))}static get analyzerId(){return"66EDDDF1-2277-40F3-983A-6FF57A433ECB"}get minValue(){return this._seriesMin}get maxValue(){return this._seriesMax}get newDataEvent(){return this._newDataEvent}get cachedPoints(){return this._cachedPoints}get sampleCount(){return this._samples}set sampleCount(e){this._samples!==e&&(this._samples=e,this.requestUpdate())}dispose(){this._countersResult.dispose(),this._newDataEvent.dispose()}onViewportChanged(e){this._currentTimespan=e,this.requestUpdate()}onDataUpdate(e){const t=this._cachedPoints.length;(this._currentTimespan.contains(e)||0===t||t>0&&this._currentTimespan.end.greater(this._cachedPoints[t-1].Timestamp))&&this.requestUpdate()}getIndexOfTimestamp(e,t=a.PointToFind.Nearest){if(0===this._cachedPoints.length)return null;const i={Timestamp:e,Value:0},n=(e,t)=>t.Timestamp.greater(e.Timestamp);switch(t){case a.PointToFind.LessThanOrEqual:return s.Utilities.findLessThan(this._cachedPoints,i,n);case a.PointToFind.GreaterThanOrEqual:return s.Utilities.findGreaterThan(this._cachedPoints,i,n);case a.PointToFind.Nearest:default:{const t=s.Utilities.findLessThan(this._cachedPoints,i,n),a=Math.min(t+1,this._cachedPoints.length-1),r=l.BigNumber.subtract(e,this._cachedPoints[t].Timestamp),o=l.BigNumber.subtract(this._cachedPoints[a].Timestamp,e);return r.greater(o)?a:t}}}requestUpdate(){this._dataWarehouseRequestHandle?this._droppedRequest=!0:this._dataWarehouseRequestHandle=window.setTimeout((()=>{if(this._currentTimespan.elapsed.equals(l.BigNumber.zero))return void(this._dataWarehouseRequestHandle=null);const e=l.BigNumber.divideNumber(this._currentTimespan.elapsed,2),t=l.BigNumber.subtract(this._currentTimespan.begin,l.BigNumber.min(e,this._currentTimespan.begin)),a=l.BigNumber.multiply(l.BigNumber.divide(t,this._currentTimespan.elapsed),this._currentTimespan.elapsed),s=l.BigNumber.add(a,l.BigNumber.multiplyNumber(this._currentTimespan.elapsed,3)),n={type:"SamplePoints",begin:a.jsonValue,end:s.jsonValue,samples:this._samples};this._countersResult.getResult(n).then((e=>this.cachePoints(e))).then((()=>{this._dataWarehouseRequestHandle=null,this._droppedRequest&&(window.setTimeout((()=>this.requestUpdate()),i.Constants.TimeoutImmediate),this._droppedRequest=!1)}),(e=>{this._logger.error(`Error occurred while communicating with the DataWarehouse: ${JSON.stringify(e,Object.getOwnPropertyNames(e))}`)}))}),i.Constants.TimeoutImmediate)}cachePoints(e){this._cachedPoints=e.p.map((e=>{const t=new l.BigNumber(e.t.h,e.t.l);return this._seriesMin=Math.min(this._seriesMin,e.v),this._seriesMax=Math.max(this._seriesMax,e.v),{Timestamp:t,Value:e.v,ToolTip:e.tt}})),this._newDataEvent.invokeEvent(null)}}t.SampledDataSeries=h}.apply(t,a),void 0===s||(e.exports=s)},6701:(e,t,i)=>{var a,s;a=[i,t,i(2560),i(2560),i(2560),i(2560),i(2560),i(2560),i(2560),i(2560),i(4557),i(1431),i(1497),i(3672),i(8610)],s=function(e,t,i,a,s,n,r,o,l,h,d,c,u,m,g){"use strict";let p;function _(e){return p||(p=new c.SampledDataSeries(e)),p}function v(e,t,d,c,p,v){const S=new o.SwimlaneConfiguration(e,p,c),T=S.graph,w=new i.LocalizedUnitConverter(T.jsonConfig.Units,T.resources),b=[];b.push(new u.LineChartSeries(_(p),w,T.resources.LiveObjectLineSeries));const C=new g.EnabledDataSeries(_(p),T.jsonConfig.EnabledAtStart,T.resources.ProfilingEnabled);if(b.push(C),T.jsonConfig.IsAnalysis){const e=new m.HighlightDataSeries(_(p),T.timeRange,T.resources.LiveObjectCurrentType);b.push(e)}const E=new h.MultiSeriesGraph(T,b);S.header.isBodyExpanded=t,S.header.unit=T.unit,E.container.setAttribute("aria-label",e.Title);const P=new n.Scale(T.scale,a.ScaleType.Left,w),D=new n.Scale(T.scale,a.ScaleType.Right,w);E.scaleChangedEvent.addEventListener(P.onScaleChanged.bind(P)),E.scaleChangedEvent.addEventListener(D.onScaleChanged.bind(D));const R=new s.SwimlaneBase(S.header,T.height,p,v);return E.scaleChangedEvent.addEventListener(R.onScaleChanged.bind(R)),d?R.addMainRegionControl(new r.SelectionOverlay(E,p,v,S.id)):R.addMainRegionControl(E),R.addMainRegionControl(new l.GridLineRenderer(p)),R.addLeftRegionControl(P),R.addRightRegionControl(D),R}function S(e,t,c,u,m,g){const p=new o.SwimlaneConfiguration(e,m,u),v=p.graph,S=new i.LocalizedUnitConverter(v.jsonConfig.Units,v.resources),T=[new d.DeltaChartSeries(_(m),v.resources)],w=new h.MultiSeriesGraph(v,T);p.header.isBodyExpanded=t,p.header.unit=v.unit,w.container.setAttribute("aria-label",e.Title);const b=new n.Scale(v.scale,a.ScaleType.Left,S),C=new n.Scale(v.scale,a.ScaleType.Right,S);w.scaleChangedEvent.addEventListener(b.onScaleChanged.bind(b)),w.scaleChangedEvent.addEventListener(C.onScaleChanged.bind(C));const E=new s.SwimlaneBase(p.header,v.height,m,g);return w.scaleChangedEvent.addEventListener(E.onScaleChanged.bind(E)),c?E.addMainRegionControl(new r.SelectionOverlay(w,m,g,p.id)):E.addMainRegionControl(w),E.addMainRegionControl(new l.GridLineRenderer(m)),E.addLeftRegionControl(b),E.addRightRegionControl(C),E}function T(e,t,d,c,u,m){const g=new o.SwimlaneConfiguration(e,u,c),p=g.graph,_=new i.LocalizedUnitConverter(p.jsonConfig.Units,p.resources),v=new h.MultiSeriesGraph(p);g.header.isBodyExpanded=t,g.header.unit=p.unit,v.container.setAttribute("aria-label",e.Title);const S=new n.Scale(p.scale,a.ScaleType.Left,_),T=new n.Scale(p.scale,a.ScaleType.Right,_);v.scaleChangedEvent.addEventListener(S.onScaleChanged.bind(S)),v.scaleChangedEvent.addEventListener(T.onScaleChanged.bind(T));const w=new s.SwimlaneBase(g.header,p.height,u,m);return v.scaleChangedEvent.addEventListener(w.onScaleChanged.bind(w)),d?w.addMainRegionControl(new r.SelectionOverlay(v,u,m,g.id)):w.addMainRegionControl(v),w.addMainRegionControl(new l.GridLineRenderer(u)),w.addLeftRegionControl(S),w.addRightRegionControl(T),w}Object.defineProperty(t,"__esModule",{value:!0}),t.PrivateBytesSwimlaneFactory=t.DeltaAllocSwimlaneFactory=t.LiveObjectSwimlaneFactory=void 0,t.LiveObjectSwimlaneFactory=v,t.DeltaAllocSwimlaneFactory=S,t.PrivateBytesSwimlaneFactory=T,window.LiveObjectSwimlaneFactory=v,window.DeltaAllocSwimlaneFactory=S,window.PrivateBytesSwimlaneFactory=T}.apply(t,a),void 0===s||(e.exports=s)},8117:t=>{"use strict";t.exports=e},2560:e=>{"use strict";e.exports=t},3432:e=>{"use strict";e.exports=require("plugin-vs-v2")}},s={},function e(t){var i=s[t];if(void 0!==i)return i.exports;var n=s[t]={exports:{}};return a[t](n,n.exports,e),n.exports}(6701);var a,s}));
// SIG // Begin signature block
// SIG // MIIoKAYJKoZIhvcNAQcCoIIoGTCCKBUCAQExDzANBglg
// SIG // hkgBZQMEAgEFADB3BgorBgEEAYI3AgEEoGkwZzAyBgor
// SIG // BgEEAYI3AgEeMCQCAQEEEBDgyQbOONQRoqMAEEvTUJAC
// SIG // AQACAQACAQACAQACAQAwMTANBglghkgBZQMEAgEFAAQg
// SIG // g+el9xdZh3yGYF4e0fCTG5WEpjWU2DoQao6I9w2cSrKg
// SIG // gg12MIIF9DCCA9ygAwIBAgITMwAAA061PHrBhG/rKwAA
// SIG // AAADTjANBgkqhkiG9w0BAQsFADB+MQswCQYDVQQGEwJV
// SIG // UzETMBEGA1UECBMKV2FzaGluZ3RvbjEQMA4GA1UEBxMH
// SIG // UmVkbW9uZDEeMBwGA1UEChMVTWljcm9zb2Z0IENvcnBv
// SIG // cmF0aW9uMSgwJgYDVQQDEx9NaWNyb3NvZnQgQ29kZSBT
// SIG // aWduaW5nIFBDQSAyMDExMB4XDTIzMDMxNjE4NDMyOVoX
// SIG // DTI0MDMxNDE4NDMyOVowdDELMAkGA1UEBhMCVVMxEzAR
// SIG // BgNVBAgTCldhc2hpbmd0b24xEDAOBgNVBAcTB1JlZG1v
// SIG // bmQxHjAcBgNVBAoTFU1pY3Jvc29mdCBDb3Jwb3JhdGlv
// SIG // bjEeMBwGA1UEAxMVTWljcm9zb2Z0IENvcnBvcmF0aW9u
// SIG // MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA
// SIG // 3QiojSOiARVrryVJn+lnTiamZiMGLORuwCQ+VG3C+rbA
// SIG // vhATw269+qRRqNW7FKed50chWJ53KDIPBStHfIy5cNJY
// SIG // HsQw6+4InH9szgRVqn7/50i8MyRTT+VtNwxf9daGddq0
// SIG // hahpZvjuOnEY0wxQaTEQmWRnXWZUQY4r28tHiNVYEw9U
// SIG // 7wHXwWEHvNn4ZlkJGEf5VpgCvr1v9fmzu4x2sV0zQsSy
// SIG // AVtOxfDwY1HMBcccn23tphweIdS+FNDn2vh1/2kREO0q
// SIG // mGc+fbFzNskjn72MiI56kjvNDRgWs+Q78yBvPCdPgTYT
// SIG // rto5eg33Ko2ELNR/zzEkCCuhO5Vw10qV8wIDAQABo4IB
// SIG // czCCAW8wHwYDVR0lBBgwFgYKKwYBBAGCN0wIAQYIKwYB
// SIG // BQUHAwMwHQYDVR0OBBYEFJzHO2Z/7pCgbAYlpMHTX7De
// SIG // aXcAMEUGA1UdEQQ+MDykOjA4MR4wHAYDVQQLExVNaWNy
// SIG // b3NvZnQgQ29ycG9yYXRpb24xFjAUBgNVBAUTDTIzMDAx
// SIG // Mis1MDA1MTYwHwYDVR0jBBgwFoAUSG5k5VAF04KqFzc3
// SIG // IrVtqMp1ApUwVAYDVR0fBE0wSzBJoEegRYZDaHR0cDov
// SIG // L3d3dy5taWNyb3NvZnQuY29tL3BraW9wcy9jcmwvTWlj
// SIG // Q29kU2lnUENBMjAxMV8yMDExLTA3LTA4LmNybDBhBggr
// SIG // BgEFBQcBAQRVMFMwUQYIKwYBBQUHMAKGRWh0dHA6Ly93
// SIG // d3cubWljcm9zb2Z0LmNvbS9wa2lvcHMvY2VydHMvTWlj
// SIG // Q29kU2lnUENBMjAxMV8yMDExLTA3LTA4LmNydDAMBgNV
// SIG // HRMBAf8EAjAAMA0GCSqGSIb3DQEBCwUAA4ICAQA9tb/a
// SIG // R6C3QUjZRQI5pJseF8TmQD7FccV2w8kL9fpBg3vV6YAZ
// SIG // 09ZV58eyQ6RTCgcAMiMHSJ5r4SvaRgWt9U8ni96e0drN
// SIG // C/EgATz0SRwBJODR6QV8R45uEyo3swG0qqm4LMtdGOyg
// SIG // KcvvVKymtpBprLgErJPeT1Zub3puzpk7ONr5tASVFPiT
// SIG // 0C4PGP7HY907Uny2GGQGicEwCIIu3Yc5+YWrS6Ow4c/u
// SIG // E/jKxXfui1GtlN86/e0MMw7YcfkT/f0WZ7q+Ip80kLBu
// SIG // QwlSDKQNZdjVhANygHGtLSNpeoUDWLGii9ZHn3Xxwqz8
// SIG // RK8vKJyY8hhr/WCqC7+gDjuzoSRJm0Jc/8ZLGBtjfyUj
// SIG // ifkKmKRkxLmBWFVmop+x3uo4G+NSW6Thig3RP2/ldqv4
// SIG // F1IBXtoHcE6Qg7L4fEjEaKtfwTV3K+4kwFN/FYK/N4lb
// SIG // T2JhYWTlTNFC6f5Ck1aIqyKT9igsU+DnpDnLbfIK2J4S
// SIG // dekDI5jL+aOd4YzRVzsYoJEFmM1DvusOdINBQHhWvObo
// SIG // AggepVxJNtRRQdRXSB6Y0kH/iz/1tjlfx34Qt7kz4Cm0
// SIG // bV6PN02WBLnaKMmfwFbtPLIm2dzJBjiTkSxETcCpthu6
// SIG // KnTr+EI/GdCaxoDM4+OjRSgMZC0qROaB0GD9R7T8dZT3
// SIG // w+4jUmybD+i4lB1x9TCCB3owggVioAMCAQICCmEOkNIA
// SIG // AAAAAAMwDQYJKoZIhvcNAQELBQAwgYgxCzAJBgNVBAYT
// SIG // AlVTMRMwEQYDVQQIEwpXYXNoaW5ndG9uMRAwDgYDVQQH
// SIG // EwdSZWRtb25kMR4wHAYDVQQKExVNaWNyb3NvZnQgQ29y
// SIG // cG9yYXRpb24xMjAwBgNVBAMTKU1pY3Jvc29mdCBSb290
// SIG // IENlcnRpZmljYXRlIEF1dGhvcml0eSAyMDExMB4XDTEx
// SIG // MDcwODIwNTkwOVoXDTI2MDcwODIxMDkwOVowfjELMAkG
// SIG // A1UEBhMCVVMxEzARBgNVBAgTCldhc2hpbmd0b24xEDAO
// SIG // BgNVBAcTB1JlZG1vbmQxHjAcBgNVBAoTFU1pY3Jvc29m
// SIG // dCBDb3Jwb3JhdGlvbjEoMCYGA1UEAxMfTWljcm9zb2Z0
// SIG // IENvZGUgU2lnbmluZyBQQ0EgMjAxMTCCAiIwDQYJKoZI
// SIG // hvcNAQEBBQADggIPADCCAgoCggIBAKvw+nIQHC6t2G6q
// SIG // ghBNNLrytlghn0IbKmvpWlCquAY4GgRJun/DDB7dN2vG
// SIG // EtgL8DjCmQawyDnVARQxQtOJDXlkh36UYCRsr55JnOlo
// SIG // XtLfm1OyCizDr9mpK656Ca/XllnKYBoF6WZ26DJSJhIv
// SIG // 56sIUM+zRLdd2MQuA3WraPPLbfM6XKEW9Ea64DhkrG5k
// SIG // NXimoGMPLdNAk/jj3gcN1Vx5pUkp5w2+oBN3vpQ97/vj
// SIG // K1oQH01WKKJ6cuASOrdJXtjt7UORg9l7snuGG9k+sYxd
// SIG // 6IlPhBryoS9Z5JA7La4zWMW3Pv4y07MDPbGyr5I4ftKd
// SIG // gCz1TlaRITUlwzluZH9TupwPrRkjhMv0ugOGjfdf8NBS
// SIG // v4yUh7zAIXQlXxgotswnKDglmDlKNs98sZKuHCOnqWbs
// SIG // YR9q4ShJnV+I4iVd0yFLPlLEtVc/JAPw0XpbL9Uj43Bd
// SIG // D1FGd7P4AOG8rAKCX9vAFbO9G9RVS+c5oQ/pI0m8GLhE
// SIG // fEXkwcNyeuBy5yTfv0aZxe/CHFfbg43sTUkwp6uO3+xb
// SIG // n6/83bBm4sGXgXvt1u1L50kppxMopqd9Z4DmimJ4X7Iv
// SIG // hNdXnFy/dygo8e1twyiPLI9AN0/B4YVEicQJTMXUpUMv
// SIG // dJX3bvh4IFgsE11glZo+TzOE2rCIF96eTvSWsLxGoGyY
// SIG // 0uDWiIwLAgMBAAGjggHtMIIB6TAQBgkrBgEEAYI3FQEE
// SIG // AwIBADAdBgNVHQ4EFgQUSG5k5VAF04KqFzc3IrVtqMp1
// SIG // ApUwGQYJKwYBBAGCNxQCBAweCgBTAHUAYgBDAEEwCwYD
// SIG // VR0PBAQDAgGGMA8GA1UdEwEB/wQFMAMBAf8wHwYDVR0j
// SIG // BBgwFoAUci06AjGQQ7kUBU7h6qfHMdEjiTQwWgYDVR0f
// SIG // BFMwUTBPoE2gS4ZJaHR0cDovL2NybC5taWNyb3NvZnQu
// SIG // Y29tL3BraS9jcmwvcHJvZHVjdHMvTWljUm9vQ2VyQXV0
// SIG // MjAxMV8yMDExXzAzXzIyLmNybDBeBggrBgEFBQcBAQRS
// SIG // MFAwTgYIKwYBBQUHMAKGQmh0dHA6Ly93d3cubWljcm9z
// SIG // b2Z0LmNvbS9wa2kvY2VydHMvTWljUm9vQ2VyQXV0MjAx
// SIG // MV8yMDExXzAzXzIyLmNydDCBnwYDVR0gBIGXMIGUMIGR
// SIG // BgkrBgEEAYI3LgMwgYMwPwYIKwYBBQUHAgEWM2h0dHA6
// SIG // Ly93d3cubWljcm9zb2Z0LmNvbS9wa2lvcHMvZG9jcy9w
// SIG // cmltYXJ5Y3BzLmh0bTBABggrBgEFBQcCAjA0HjIgHQBM
// SIG // AGUAZwBhAGwAXwBwAG8AbABpAGMAeQBfAHMAdABhAHQA
// SIG // ZQBtAGUAbgB0AC4gHTANBgkqhkiG9w0BAQsFAAOCAgEA
// SIG // Z/KGpZjgVHkaLtPYdGcimwuWEeFjkplCln3SeQyQwWVf
// SIG // Liw++MNy0W2D/r4/6ArKO79HqaPzadtjvyI1pZddZYSQ
// SIG // fYtGUFXYDJJ80hpLHPM8QotS0LD9a+M+By4pm+Y9G6XU
// SIG // tR13lDni6WTJRD14eiPzE32mkHSDjfTLJgJGKsKKELuk
// SIG // qQUMm+1o+mgulaAqPyprWEljHwlpblqYluSD9MCP80Yr
// SIG // 3vw70L01724lruWvJ+3Q3fMOr5kol5hNDj0L8giJ1h/D
// SIG // Mhji8MUtzluetEk5CsYKwsatruWy2dsViFFFWDgycSca
// SIG // f7H0J/jeLDogaZiyWYlobm+nt3TDQAUGpgEqKD6CPxNN
// SIG // ZgvAs0314Y9/HG8VfUWnduVAKmWjw11SYobDHWM2l4bf
// SIG // 2vP48hahmifhzaWX0O5dY0HjWwechz4GdwbRBrF1HxS+
// SIG // YWG18NzGGwS+30HHDiju3mUv7Jf2oVyW2ADWoUa9WfOX
// SIG // pQlLSBCZgB/QACnFsZulP0V3HjXG0qKin3p6IvpIlR+r
// SIG // +0cjgPWe+L9rt0uX4ut1eBrs6jeZeRhL/9azI2h15q/6
// SIG // /IvrC4DqaTuv/DDtBEyO3991bWORPdGdVk5Pv4BXIqF4
// SIG // ETIheu9BCrE/+6jMpF3BoYibV3FWTkhFwELJm3ZbCoBI
// SIG // a/15n8G9bW1qyVJzEw16UM0xghoKMIIaBgIBATCBlTB+
// SIG // MQswCQYDVQQGEwJVUzETMBEGA1UECBMKV2FzaGluZ3Rv
// SIG // bjEQMA4GA1UEBxMHUmVkbW9uZDEeMBwGA1UEChMVTWlj
// SIG // cm9zb2Z0IENvcnBvcmF0aW9uMSgwJgYDVQQDEx9NaWNy
// SIG // b3NvZnQgQ29kZSBTaWduaW5nIFBDQSAyMDExAhMzAAAD
// SIG // TrU8esGEb+srAAAAAANOMA0GCWCGSAFlAwQCAQUAoIGu
// SIG // MBkGCSqGSIb3DQEJAzEMBgorBgEEAYI3AgEEMBwGCisG
// SIG // AQQBgjcCAQsxDjAMBgorBgEEAYI3AgEVMC8GCSqGSIb3
// SIG // DQEJBDEiBCBwRtABaGj5y04BNWG8HmXniWN+0Q4gz5x9
// SIG // fdodYPa1yTBCBgorBgEEAYI3AgEMMTQwMqAUgBIATQBp
// SIG // AGMAcgBvAHMAbwBmAHShGoAYaHR0cDovL3d3dy5taWNy
// SIG // b3NvZnQuY29tMA0GCSqGSIb3DQEBAQUABIIBALhvxRor
// SIG // 0+EnBImYFKEt5+QCmUKSfFyT0g68qJPqWMUEOvO7JT9z
// SIG // 7AnZ+BH5vT8ZNjK+zXln2oT2vB3seRjqYEhPQIL/j+fw
// SIG // IVonn+NgDmWtgTaMRXxGHI4iJRHiFUPxtjeZhTesrK3Z
// SIG // lws8kjhoVQTU2HjL7TxkcYyby0FI8IjHMHTBYVw+5HSl
// SIG // 26g3nHRpLLPQXA2Od9XDfIAUb/Spzro4BZIHaw4Seq1v
// SIG // P/gSZ1HhrImqY9HwXsuN1FbZkATYL1YL0aRo8eN6Apdj
// SIG // Ug5Ns5Z5A/5NeUtJZyA/2Vef6fX6EqNmiSXJqYOQRCnb
// SIG // 57eRTGwv7bADjwZTfNdCqssWiQ2hgheUMIIXkAYKKwYB
// SIG // BAGCNwMDATGCF4Awghd8BgkqhkiG9w0BBwKgghdtMIIX
// SIG // aQIBAzEPMA0GCWCGSAFlAwQCAQUAMIIBUgYLKoZIhvcN
// SIG // AQkQAQSgggFBBIIBPTCCATkCAQEGCisGAQQBhFkKAwEw
// SIG // MTANBglghkgBZQMEAgEFAAQg+Ym3DDUWgbvh0Xb6W9/N
// SIG // MicdTPFJmPEFDDzB4R1lOsQCBmUorOGUwxgTMjAyMzEw
// SIG // MjAxNzA0MzYuNDc3WjAEgAIB9KCB0aSBzjCByzELMAkG
// SIG // A1UEBhMCVVMxEzARBgNVBAgTCldhc2hpbmd0b24xEDAO
// SIG // BgNVBAcTB1JlZG1vbmQxHjAcBgNVBAoTFU1pY3Jvc29m
// SIG // dCBDb3Jwb3JhdGlvbjElMCMGA1UECxMcTWljcm9zb2Z0
// SIG // IEFtZXJpY2EgT3BlcmF0aW9uczEnMCUGA1UECxMeblNo
// SIG // aWVsZCBUU1MgRVNOOkUwMDItMDVFMC1EOTQ3MSUwIwYD
// SIG // VQQDExxNaWNyb3NvZnQgVGltZS1TdGFtcCBTZXJ2aWNl
// SIG // oIIR6jCCByAwggUIoAMCAQICEzMAAAHZnFwFkrCDaz4A
// SIG // AQAAAdkwDQYJKoZIhvcNAQELBQAwfDELMAkGA1UEBhMC
// SIG // VVMxEzARBgNVBAgTCldhc2hpbmd0b24xEDAOBgNVBAcT
// SIG // B1JlZG1vbmQxHjAcBgNVBAoTFU1pY3Jvc29mdCBDb3Jw
// SIG // b3JhdGlvbjEmMCQGA1UEAxMdTWljcm9zb2Z0IFRpbWUt
// SIG // U3RhbXAgUENBIDIwMTAwHhcNMjMwNjAxMTgzMjU4WhcN
// SIG // MjQwMjAxMTgzMjU4WjCByzELMAkGA1UEBhMCVVMxEzAR
// SIG // BgNVBAgTCldhc2hpbmd0b24xEDAOBgNVBAcTB1JlZG1v
// SIG // bmQxHjAcBgNVBAoTFU1pY3Jvc29mdCBDb3Jwb3JhdGlv
// SIG // bjElMCMGA1UECxMcTWljcm9zb2Z0IEFtZXJpY2EgT3Bl
// SIG // cmF0aW9uczEnMCUGA1UECxMeblNoaWVsZCBUU1MgRVNO
// SIG // OkUwMDItMDVFMC1EOTQ3MSUwIwYDVQQDExxNaWNyb3Nv
// SIG // ZnQgVGltZS1TdGFtcCBTZXJ2aWNlMIICIjANBgkqhkiG
// SIG // 9w0BAQEFAAOCAg8AMIICCgKCAgEA1ekgzda4GNt9Oci3
// SIG // QnVDbxwhBOGdLnA+giry+ZQOxzPNUjJFt+kVO+1GgS/T
// SIG // 0nL4qn1cxNq9qUW0TLQwTMBMdYmos1dhGbDRhrs3kd1z
// SIG // WDm0LyVS2gogZLQGXau+QTRSIpfkn3aV4Cs1UGYgwSQz
// SIG // edFggAza62+PGeGe/yr8s2g+Bm/mmXgoqAdhoNZud3fu
// SIG // qVEwXN1jucR2Yv66yP13Z4YhOv27KY6VOWrnwpSA8dEA
// SIG // 6tUEcNOGnayoXA1shi90mgaf4YzfuCSVOys77ClmVXU7
// SIG // lz6I52k8FnB3RBn88Ymhd9M3fEmOGEVHDBjzkDkR9SD8
// SIG // JMMJakJHNBwZCQkM4ml2PyKYDEcP1z+FL/iQSfEWRimT
// SIG // dc0T1k/XebxxlEpl95u+0SqAn5IEiYnyIkIuhXNDmCku
// SIG // oGTgO53eLfpYgK6/Z4qngv1HDTrla3FQuAm5MHydnh5G
// SIG // lodfLFLd1A/EB2C0MJ/eT/h5vD2SYoK9UkS3LJvKTj3n
// SIG // uzwW53SP1XiibJkHY3pNmhTvVRp1LcwwwaMJYV7IbMGT
// SIG // DJCyf+I1M0JlAX5viQB9edehPhtNsEuzYMzMJqR1gpgG
// SIG // hXXew8iSKhmum3Ga0e0AC3ZMCIVUA4M2QLjcasL4eCGu
// SIG // GSOVaMo+G+81gIZrq6cKTKYo8/onnlsH+mXZsrEY0f8m
// SIG // elF5hmsCAwEAAaOCAUkwggFFMB0GA1UdDgQWBBQcOsEp
// SIG // U2eoBV5dOcP7NxmtX+dcJzAfBgNVHSMEGDAWgBSfpxVd
// SIG // AF5iXYP05dJlpxtTNRnpcjBfBgNVHR8EWDBWMFSgUqBQ
// SIG // hk5odHRwOi8vd3d3Lm1pY3Jvc29mdC5jb20vcGtpb3Bz
// SIG // L2NybC9NaWNyb3NvZnQlMjBUaW1lLVN0YW1wJTIwUENB
// SIG // JTIwMjAxMCgxKS5jcmwwbAYIKwYBBQUHAQEEYDBeMFwG
// SIG // CCsGAQUFBzAChlBodHRwOi8vd3d3Lm1pY3Jvc29mdC5j
// SIG // b20vcGtpb3BzL2NlcnRzL01pY3Jvc29mdCUyMFRpbWUt
// SIG // U3RhbXAlMjBQQ0ElMjAyMDEwKDEpLmNydDAMBgNVHRMB
// SIG // Af8EAjAAMBYGA1UdJQEB/wQMMAoGCCsGAQUFBwMIMA4G
// SIG // A1UdDwEB/wQEAwIHgDANBgkqhkiG9w0BAQsFAAOCAgEA
// SIG // KjbVWCzutUzLiGpwu3JbdIvl0UWx8J8DaNOUN7OKaRbX
// SIG // eJwpgf0yTwyerrxK8sbNL8OWPo0MFIip4ZdlRhsCKtKV
// SIG // gyLmluKaTFdaWEHyenbQRpEYkz9XilbwEWGTEWiE3vWY
// SIG // cCSZ2D/N6TMRwsWhLGQuIpWN/+eXaneGV0ws/3KRuWp5
// SIG // g2q7Z1poMrMoDbLU8G1iSUY/OYGEZI8Yv58SgIhBcZeh
// SIG // n5HJ11cvA0RUI9XdwIqrHj6HiM8btYrgCUcA633uDZyh
// SIG // 6qE4FrL+3gliZ1o1lkbe0URq6b8y0KPwcVG/IuPVMEYP
// SIG // RuW8aXeUrtW9tuBr+htR0VPqiRwdc6HuNQ9q/4nNgT6L
// SIG // rFfZ3mCuaiOTxy7IQJ+mE0JZW1faQmzlL2TtHbXcKeRx
// SIG // 9n8OqHyTcCnDxJWqpBHMb64YUVqsDYGhFU8iFeIzHPIz
// SIG // 28djYfcwM7Z2/TX5wxThPv4BfHGak2v0+uUxjT97jIj9
// SIG // 4K/JyF0NiEcDFVKC5hrtqn5oQ6HsLN3XL5OrNWgOplx8
// SIG // PjADRCAyio8N4thuibWZBHprtTl7bJIP7Rp38sGjIKuQ
// SIG // mrlPW+np07QPlBPhip5okFumFBz4QSNC9kBu+k0Qa3uT
// SIG // 6TVR4snP9NW41BDKXmgfiJwB+Jw8WF8dfMGyRPnvyGzL
// SIG // 9NeOxBS+/dnRCxdF8KqnFNEwggdxMIIFWaADAgECAhMz
// SIG // AAAAFcXna54Cm0mZAAAAAAAVMA0GCSqGSIb3DQEBCwUA
// SIG // MIGIMQswCQYDVQQGEwJVUzETMBEGA1UECBMKV2FzaGlu
// SIG // Z3RvbjEQMA4GA1UEBxMHUmVkbW9uZDEeMBwGA1UEChMV
// SIG // TWljcm9zb2Z0IENvcnBvcmF0aW9uMTIwMAYDVQQDEylN
// SIG // aWNyb3NvZnQgUm9vdCBDZXJ0aWZpY2F0ZSBBdXRob3Jp
// SIG // dHkgMjAxMDAeFw0yMTA5MzAxODIyMjVaFw0zMDA5MzAx
// SIG // ODMyMjVaMHwxCzAJBgNVBAYTAlVTMRMwEQYDVQQIEwpX
// SIG // YXNoaW5ndG9uMRAwDgYDVQQHEwdSZWRtb25kMR4wHAYD
// SIG // VQQKExVNaWNyb3NvZnQgQ29ycG9yYXRpb24xJjAkBgNV
// SIG // BAMTHU1pY3Jvc29mdCBUaW1lLVN0YW1wIFBDQSAyMDEw
// SIG // MIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEA
// SIG // 5OGmTOe0ciELeaLL1yR5vQ7VgtP97pwHB9KpbE51yMo1
// SIG // V/YBf2xK4OK9uT4XYDP/XE/HZveVU3Fa4n5KWv64NmeF
// SIG // RiMMtY0Tz3cywBAY6GB9alKDRLemjkZrBxTzxXb1hlDc
// SIG // wUTIcVxRMTegCjhuje3XD9gmU3w5YQJ6xKr9cmmvHaus
// SIG // 9ja+NSZk2pg7uhp7M62AW36MEBydUv626GIl3GoPz130
// SIG // /o5Tz9bshVZN7928jaTjkY+yOSxRnOlwaQ3KNi1wjjHI
// SIG // NSi947SHJMPgyY9+tVSP3PoFVZhtaDuaRr3tpK56KTes
// SIG // y+uDRedGbsoy1cCGMFxPLOJiss254o2I5JasAUq7vnGp
// SIG // F1tnYN74kpEeHT39IM9zfUGaRnXNxF803RKJ1v2lIH1+
// SIG // /NmeRd+2ci/bfV+AutuqfjbsNkz2K26oElHovwUDo9Fz
// SIG // pk03dJQcNIIP8BDyt0cY7afomXw/TNuvXsLz1dhzPUNO
// SIG // wTM5TI4CvEJoLhDqhFFG4tG9ahhaYQFzymeiXtcodgLi
// SIG // Mxhy16cg8ML6EgrXY28MyTZki1ugpoMhXV8wdJGUlNi5
// SIG // UPkLiWHzNgY1GIRH29wb0f2y1BzFa/ZcUlFdEtsluq9Q
// SIG // BXpsxREdcu+N+VLEhReTwDwV2xo3xwgVGD94q0W29R6H
// SIG // XtqPnhZyacaue7e3PmriLq0CAwEAAaOCAd0wggHZMBIG
// SIG // CSsGAQQBgjcVAQQFAgMBAAEwIwYJKwYBBAGCNxUCBBYE
// SIG // FCqnUv5kxJq+gpE8RjUpzxD/LwTuMB0GA1UdDgQWBBSf
// SIG // pxVdAF5iXYP05dJlpxtTNRnpcjBcBgNVHSAEVTBTMFEG
// SIG // DCsGAQQBgjdMg30BATBBMD8GCCsGAQUFBwIBFjNodHRw
// SIG // Oi8vd3d3Lm1pY3Jvc29mdC5jb20vcGtpb3BzL0RvY3Mv
// SIG // UmVwb3NpdG9yeS5odG0wEwYDVR0lBAwwCgYIKwYBBQUH
// SIG // AwgwGQYJKwYBBAGCNxQCBAweCgBTAHUAYgBDAEEwCwYD
// SIG // VR0PBAQDAgGGMA8GA1UdEwEB/wQFMAMBAf8wHwYDVR0j
// SIG // BBgwFoAU1fZWy4/oolxiaNE9lJBb186aGMQwVgYDVR0f
// SIG // BE8wTTBLoEmgR4ZFaHR0cDovL2NybC5taWNyb3NvZnQu
// SIG // Y29tL3BraS9jcmwvcHJvZHVjdHMvTWljUm9vQ2VyQXV0
// SIG // XzIwMTAtMDYtMjMuY3JsMFoGCCsGAQUFBwEBBE4wTDBK
// SIG // BggrBgEFBQcwAoY+aHR0cDovL3d3dy5taWNyb3NvZnQu
// SIG // Y29tL3BraS9jZXJ0cy9NaWNSb29DZXJBdXRfMjAxMC0w
// SIG // Ni0yMy5jcnQwDQYJKoZIhvcNAQELBQADggIBAJ1Vffwq
// SIG // reEsH2cBMSRb4Z5yS/ypb+pcFLY+TkdkeLEGk5c9MTO1
// SIG // OdfCcTY/2mRsfNB1OW27DzHkwo/7bNGhlBgi7ulmZzpT
// SIG // Td2YurYeeNg2LpypglYAA7AFvonoaeC6Ce5732pvvinL
// SIG // btg/SHUB2RjebYIM9W0jVOR4U3UkV7ndn/OOPcbzaN9l
// SIG // 9qRWqveVtihVJ9AkvUCgvxm2EhIRXT0n4ECWOKz3+SmJ
// SIG // w7wXsFSFQrP8DJ6LGYnn8AtqgcKBGUIZUnWKNsIdw2Fz
// SIG // Lixre24/LAl4FOmRsqlb30mjdAy87JGA0j3mSj5mO0+7
// SIG // hvoyGtmW9I/2kQH2zsZ0/fZMcm8Qq3UwxTSwethQ/gpY
// SIG // 3UA8x1RtnWN0SCyxTkctwRQEcb9k+SS+c23Kjgm9swFX
// SIG // SVRk2XPXfx5bRAGOWhmRaw2fpCjcZxkoJLo4S5pu+yFU
// SIG // a2pFEUep8beuyOiJXk+d0tBMdrVXVAmxaQFEfnyhYWxz
// SIG // /gq77EFmPWn9y8FBSX5+k77L+DvktxW/tM4+pTFRhLy/
// SIG // AsGConsXHRWJjXD+57XQKBqJC4822rpM+Zv/Cuk0+CQ1
// SIG // ZyvgDbjmjJnW4SLq8CdCPSWU5nR0W2rRnj7tfqAxM328
// SIG // y+l7vzhwRNGQ8cirOoo6CGJ/2XBjU02N7oJtpQUQwXEG
// SIG // ahC0HVUzWLOhcGbyoYIDTTCCAjUCAQEwgfmhgdGkgc4w
// SIG // gcsxCzAJBgNVBAYTAlVTMRMwEQYDVQQIEwpXYXNoaW5n
// SIG // dG9uMRAwDgYDVQQHEwdSZWRtb25kMR4wHAYDVQQKExVN
// SIG // aWNyb3NvZnQgQ29ycG9yYXRpb24xJTAjBgNVBAsTHE1p
// SIG // Y3Jvc29mdCBBbWVyaWNhIE9wZXJhdGlvbnMxJzAlBgNV
// SIG // BAsTHm5TaGllbGQgVFNTIEVTTjpFMDAyLTA1RTAtRDk0
// SIG // NzElMCMGA1UEAxMcTWljcm9zb2Z0IFRpbWUtU3RhbXAg
// SIG // U2VydmljZaIjCgEBMAcGBSsOAwIaAxUA4hxFugmt5+QY
// SIG // GVf7UP3wkdPU3/eggYMwgYCkfjB8MQswCQYDVQQGEwJV
// SIG // UzETMBEGA1UECBMKV2FzaGluZ3RvbjEQMA4GA1UEBxMH
// SIG // UmVkbW9uZDEeMBwGA1UEChMVTWljcm9zb2Z0IENvcnBv
// SIG // cmF0aW9uMSYwJAYDVQQDEx1NaWNyb3NvZnQgVGltZS1T
// SIG // dGFtcCBQQ0EgMjAxMDANBgkqhkiG9w0BAQsFAAIFAOjd
// SIG // DkcwIhgPMjAyMzEwMjAxNDMzNDNaGA8yMDIzMTAyMTE0
// SIG // MzM0M1owdDA6BgorBgEEAYRZCgQBMSwwKjAKAgUA6N0O
// SIG // RwIBADAHAgEAAgIXWjAHAgEAAgITnzAKAgUA6N5fxwIB
// SIG // ADA2BgorBgEEAYRZCgQCMSgwJjAMBgorBgEEAYRZCgMC
// SIG // oAowCAIBAAIDB6EgoQowCAIBAAIDAYagMA0GCSqGSIb3
// SIG // DQEBCwUAA4IBAQAlyKoFZDQebzs6XVy5bvmGQAD02K8p
// SIG // sIX5/clUV6vjOnuSgJqGbNK2T9KqkhwZGAqYmOOxHMvV
// SIG // mo9Dx5tno2pYr2BwHc6kgSiR0WFW/GQBLhSfelmlHJvu
// SIG // NFgfmw+pslG7NepOseQtoMTbOqlIjbsHi3cQnMj1TIOE
// SIG // Ow6q7FBmGfwwYZ+HaYtkfX8NpewZX4/HAadzuTPQOfWo
// SIG // 1uJeY3RWO+X8l1GZ5GXoc4wvyR8E75dGD9py1ohry1wQ
// SIG // OJdF/buqqGo18Ki68dK7x5UifETATw+9vxkpebdrngE6
// SIG // hCuRmDKVFkKHF1NEVuvU2aXxUbSPzInzPRjSUWdNmyjU
// SIG // BTkuMYIEDTCCBAkCAQEwgZMwfDELMAkGA1UEBhMCVVMx
// SIG // EzARBgNVBAgTCldhc2hpbmd0b24xEDAOBgNVBAcTB1Jl
// SIG // ZG1vbmQxHjAcBgNVBAoTFU1pY3Jvc29mdCBDb3Jwb3Jh
// SIG // dGlvbjEmMCQGA1UEAxMdTWljcm9zb2Z0IFRpbWUtU3Rh
// SIG // bXAgUENBIDIwMTACEzMAAAHZnFwFkrCDaz4AAQAAAdkw
// SIG // DQYJYIZIAWUDBAIBBQCgggFKMBoGCSqGSIb3DQEJAzEN
// SIG // BgsqhkiG9w0BCRABBDAvBgkqhkiG9w0BCQQxIgQg6KKA
// SIG // B5SClKWbcix5EglIMoAOgbrP0XDKF+PMij4JGV0wgfoG
// SIG // CyqGSIb3DQEJEAIvMYHqMIHnMIHkMIG9BCCfoBWyLTpv
// SIG // 1DAwJxE82yXtLtA1ndjIKYG9EnG0IAd58zCBmDCBgKR+
// SIG // MHwxCzAJBgNVBAYTAlVTMRMwEQYDVQQIEwpXYXNoaW5n
// SIG // dG9uMRAwDgYDVQQHEwdSZWRtb25kMR4wHAYDVQQKExVN
// SIG // aWNyb3NvZnQgQ29ycG9yYXRpb24xJjAkBgNVBAMTHU1p
// SIG // Y3Jvc29mdCBUaW1lLVN0YW1wIFBDQSAyMDEwAhMzAAAB
// SIG // 2ZxcBZKwg2s+AAEAAAHZMCIEIPUOVde2gAWjKyuqhiqZ
// SIG // lCJPYyMfrswf0/G6vlVRSyHRMA0GCSqGSIb3DQEBCwUA
// SIG // BIICABSorcyeGV3BQV8ii9GZlRCKENfRHY17lndGwRpA
// SIG // Jpa0fDry00xvtybIWscx7X0yXgXCGZ40gAYcyIXpd2rx
// SIG // s+27fAUb8IqYEaGNgZD9BkmhIX3vJggLBsJw4D3ubA/r
// SIG // maE+wIE5oElJScAxikYgF8DSZGqhZlE6feXNL1JsB6em
// SIG // EZ0BQ5khFdtuSjWljev/LLwetN3PQZJf6hHG3faWEQbs
// SIG // vctrMcGXDzdqVqi24LpxV6hhs9pflF+lEkij6wS8EBgT
// SIG // DL3e1GGjNQ1tek+R5lN6KyJpZr1t6TvJkL+oTRG2r/XH
// SIG // Ql19ancH6fAaIbey94HyYpuvdCLrkQuQWR3KUYbXzDFj
// SIG // ir3plYQn9srrN6ew3AV3NrinTAQhmczFAQW3VIVughWb
// SIG // H64MVAi2E76DEtn6RxYwvYepry1JgoesrOTcSVFLtmms
// SIG // SA53b8Oizn3ZiGMGcG4bXbpGDGr8wLxS9J9LWVVNRcBW
// SIG // 8AJ2ZXsNu65CNCwo9+VEdORs+q22/ybS04nyJ2J+SiFD
// SIG // CYUgSM+m+1Yqo735nfQdavWV2kJuLTmvhzhPfnzdFy2y
// SIG // Tk4vnCY7ss2UkB7lNH8kmQNHVPQT6cr24Gk8rkDqeXvu
// SIG // o3uDSheN58i5m5yPqdAf9PEY6yez6rjo9mhke2/Pm0OZ
// SIG // 5C/x34If1b03zjrdzBDV0wRu8+DQ
// SIG // End signature block
