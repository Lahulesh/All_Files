define("eventsViewerSwimlane",["diagnosticsHub","diagnosticsHub-swimlanes","plugin-vs-v2"],((e,t,i)=>{return n={952:(e,t,i)=>{var n;n=function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.FilterLimit=t.errorNameCanceled=t.EventCountLimit=t.AnyStacksViewId=t.EventsViewerAnalyzerId=t.EventsListDetailsViewId=void 0,t.EventsListDetailsViewId=function(){return"AC3DC4D0-1FCC-4849-9F63-C8FFB47EC1DC"},t.EventsViewerAnalyzerId=function(){return"D9A8E704-BD31-402F-8990-A33EFB271CF0"},t.AnyStacksViewId=function(){return"FBF21B2D-E165-4C4E-8B10-36F0BC084F20"},t.EventCountLimit=function(){return 2e4},t.errorNameCanceled=function(){return"Canceled"},t.FilterLimit=function(){return 32766}}.apply(t,[i,t]),void 0===n||(e.exports=n)},398:(e,t,i)=>{var n,s;n=[i,t,i(432),i(560),i(560),i(560),i(560),i(117),i(117),i(117),i(117)],s=function(e,t,i,n,s,a,r,o,h,d,c){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.BarGraphDataSeries=void 0,t.BarGraphDataSeries=class{constructor(e,t,a,r){this._context={},this._dataWarehouseRequestHandle=1,this._droppedRequest=!1,this._logger=c.getLogger("BarGraphDataSeries"),this._minValue=Number.MAX_VALUE,this._maxValue=Number.MIN_VALUE,this._sampledPoints=[],this._data=[],this._width=250,this._aggregationSpan=200,this._newDataEvent=new h.AggregatedEvent,this._dataSeriesInfo={},this.legendData=[],this.topSeriesIds=[],this._msToNano=1e6,this._minBarWidth=4,this._gapPx=2,this._analyzerId=e.AnalyzerId,this._viewport=t,this._title=r.getString("EventsViewerDataSeries"),this._graphResources=r,this._barWidth=this._minBarWidth;const d=s.Utilities.getColorSet();this._colors=d.map((e=>new n.ChartColorScheme(e,e))),this._onThemeChangedBoundFunction=()=>this.onThemeChanged(),i.Theme.addEventListener("themechanged",this._onThemeChangedBoundFunction),this._unitConverter=a,this._marker=document.createElement("div"),this._marker.classList.add("countersDataSeries-marker"),this._context.timeDomain=this._viewport,this._context.customDomain=e.CustomDomain||{},this._context.customDomain.Task="GetCounter",this._context.customDomain.CounterId=e.CounterId;const l=this.calculateNumBuckets();this._context.customDomain.NumBuckets=(0!==l?l:1).toString(),this._loadDataWarehousePromise=o.loadDataWarehouse().then((e=>{this._dataWarehouseHandle=e,this._dataWarehouseRequestHandle=null,this._droppedRequest=!1,this.requestUpdate()}))}get graphLegendData(){return this.legendData}get minValue(){return this._minValue}get maxValue(){return this._maxValue}get marker(){return this._marker}get title(){return this._title}get newDataEvent(){return this._newDataEvent}dispose(){this._newDataEvent.dispose(),i.Theme.removeEventListener("themechanged",this._onThemeChangedBoundFunction)}onDataUpdate(e){this.requestUpdate()}onViewportChanged(e){this._viewport=e,this.requestUpdate()}onThemeChanged(){const e=s.Utilities.getColorSet();this._colors=e.map((e=>new n.ChartColorScheme(e,e))),this.requestUpdate()}draw(e,t){if(0!==this._sampledPoints.length){if(t.chartRect.width!==this._width){this._logger.debug(`swimlane width: ${t.chartRect.width}`);const e=this._width;this._width=t.chartRect.width;const i=this.calculateNumBuckets();if(this._context.customDomain.NumBuckets=(0!==i?i:1).toString(),this.requestUpdate(),250===e)return}this._barWidth=this.calculateBarWidth(),this._sampledPoints.forEach((i=>{this.drawSingleBar(e,t,i)}))}}calculateNumBuckets(){const e=parseInt(d.BigNumber.divide(this._viewport.end,d.BigNumber.convertFromNumber(this._aggregationSpan*this._msToNano)).value,16),t=Math.floor(this._width/(this._minBarWidth+this._gapPx));return Math.min(e,t)}calculateBarWidth(){const e=d.BigNumber.subtract(this._viewport.end,this._viewport.begin),t=parseInt(e.value,16)/(this._width*this._msToNano);return t*this._minBarWidth>=this._aggregationSpan?this._minBarWidth:this._aggregationSpan/t-this._gapPx}drawSingleBar(e,t,i){let n=0,a=t.chartRect.height-s.Utilities.scaleToRange(0,t.gridY.min,t.gridY.max,0,t.chartRect.height);e.save(),e.lineWidth=t.chartRect.height<100?1:2;const r=this.populateBarInfo(t,i);for(const t in r){const i=r[t];e.fillStyle=i.color.lineFillColor,e.strokeStyle=i.color.lineColor;const s=0===n?a:n+a-2;e.fillRect(i.xCoordinate,s,this._barWidth,i.height),a=s,n=i.height}e.restore()}populateBarInfo(e,t){const i={};let n=0;const a=this._barWidth/2;if(t.forEach((t=>{let r=-1*s.Utilities.scaleToRange(t.Value,e.gridY.min,e.gridY.max,0,e.chartRect.height);var o;Math.abs(r)<1&&0!==r&&(r=-1),n+=r,i[t.Id]={color:this._dataSeriesInfo[t.Id],series:t.Series,height:r,xCoordinate:(o=t.Timestamp,s.Utilities.convertToPixel(o,e.gridX,e.chartRect.width,!1)-a)}})),Math.abs(n)>e.chartRect.height){const t=e.chartRect.height/Math.abs(n);for(const e in i)i[e].height*=t}return i}getPointAtTimestamp(e,t=a.PointToFind.Nearest){if(0===this._sampledPoints.length)return null;const i=this.getOccurrencePointIndex(this._sampledPoints.map((e=>e[0].Timestamp)),e,0,this._sampledPoints.length-1,t),n=this._sampledPoints[i];let s=`${this._graphResources.getString("EventsViewerTooltip")}\n`;return n.forEach((e=>{0!==e.Value&&(s+=`${e.Series}: ${this._unitConverter.formatNumber(e.Value)}\n`)})),{timestamp:n[0].Timestamp,tooltip:s,value:Number.NaN}}getOccurrencePointIndex(e,t,i,n,r){const o=(e,t)=>t.greaterOrEqual(e);switch(r){case a.PointToFind.LessThanOrEqual:return s.Utilities.findLessThan(e,t,o,i,n);case a.PointToFind.GreaterThanOrEqual:return s.Utilities.findGreaterThan(e,t,o,i,n);case a.PointToFind.Nearest:default:{i=s.Utilities.findLessThan(e,t,o),n=Math.min(i+1,e.length-1);const a=d.BigNumber.subtract(t,e[i]),r=d.BigNumber.subtract(e[n],t);return a.greater(r)?n:i}}}requestUpdate(){this._dataWarehouseRequestHandle?this._droppedRequest=!0:this._dataWarehouseRequestHandle=window.setTimeout((()=>{this._context.timeDomain=this._viewport,this._dataWarehouseHandle.getFilteredData(this._context,this._analyzerId).then((e=>{if(e&&"getResult"in e&&"function"==typeof e.getResult){let t;return e.getResult(null).then((i=>(t=i,e.dispose()))).then((()=>t))}return e})).then((e=>(this.setLegendData(e.s),e.p))).then((e=>this.convertDtoToIPointArray(e))).then((e=>this.cachePoints(e))).then((()=>{this._newDataEvent.invokeEvent(this),this._dataWarehouseRequestHandle=null,this._droppedRequest&&(window.setTimeout((()=>this.requestUpdate()),r.Constants.TimeoutImmediate),this._droppedRequest=!1)}),(e=>{this._logger.error(`Error occurred while communicating with the DataWarehouse: ${JSON.stringify(e)}`)}))}),r.Constants.TimeoutImmediate)}convertDtoToIPointArray(e){return e.map((e=>{let t=0;return e.v.map((i=>{const n=this.topSeriesIds[t],s=Object.keys(n)[0];return t++,{Timestamp:new d.BigNumber(e.t.h,e.t.l),Value:i,Series:n[s],ToolTip:e.tt,Id:s}}))}))}setLegendData(e){let t=0;this.legendData=[],this.topSeriesIds=e,e.forEach((e=>{const i=this._colors[t],n=Object.keys(e)[0],s=e[n];this._dataSeriesInfo[n]=i,t++,this.legendData.push({color:i.lineFillColor,legendText:s,legendTooltip:this._graphResources.getString("EventsViewerLegendTooltip",s)})}))}cachePoints(e){if(this._data=[],this._maxValue=Number.MIN_VALUE,this._minValue=Number.MAX_VALUE,!e||0===e.length||0===e[0].length)return;const t={};Object.keys(this._dataSeriesInfo).forEach((e=>{t[e]=new d.BigNumber(0,0)}));for(let i=0;i<e.length;i++){const n=e[i];let s=0;this._data[i]=n.filter((e=>!(!e.Timestamp||!e.Timestamp.greaterOrEqual(t[e.Id])||(s+=e.Value,t[e.Id]=e.Timestamp,0)))),this._maxValue=Math.max(this._maxValue,s),this._minValue=Math.min(this._minValue,s)}this._sampledPoints=this._data}}}.apply(t,n),void 0===s||(e.exports=s)},973:(e,t,i)=>{var n,s;n=[i,t,i(560),i(802)],s=function(e,t,i,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.CustomLegend=void 0,t.CustomLegend=class{constructor(e){this._graphLegendData=[],this._legendItems=[],e.newDataEvent.addEventListener((e=>{this._graphLegendData=e.graphLegendData;const t=document.createDocumentFragment();for(;this._container.firstChild;)this._container.removeChild(this._container.firstChild);this._graphLegendData.forEach((e=>{const i=new n.CustomLegendItem(e);t.appendChild(i.container),this._legendItems.push(i)})),this._container.appendChild(t)})),this._container=document.createElement("div"),this._container.className="legend-container",this._container.setAttribute("tabindex","0"),this._container.onkeydown=e=>this.onKeyDown(e)}get container(){return this._container}onKeyDown(e){let t;e.keyCode!==i.KeyCodes.ArrowRight&&e.keyCode!==i.KeyCodes.ArrowLeft||e.shiftKey||(document.activeElement===this._container||this._container.contains(document.activeElement))&&(t=e.keyCode===i.KeyCodes.ArrowRight?document.activeElement!==this._container&&document.activeElement.nextElementSibling?document.activeElement.nextElementSibling:this._container.firstElementChild:document.activeElement!==this._container&&document.activeElement.previousElementSibling?document.activeElement.previousElementSibling:this._container.lastElementChild,t.focus())}}}.apply(t,n),void 0===s||(e.exports=s)},802:(e,t,i)=>{var n,s;n=[i,t,i(432),i(560)],s=function(e,t,i,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.CustomLegendItem=void 0,t.CustomLegendItem=class{constructor(e){let t;this._tooltipTimer=null,e.marker?t=e.marker.cloneNode(!0):(t=document.createElement("div"),t.style.backgroundColor=e.color),t.classList.add("legend-marker"),t.style.width="1em",t.style.height="1em";const i=document.createElement("div");i.classList.add("legend-text-div"),i.innerText=e.legendText;const s=document.createElement("div");s.classList.add("legend-div"),s.appendChild(t),s.appendChild(i),e.legendTooltip&&(s.setAttribute("data-plugin-vs-tooltip",JSON.stringify({content:e.legendTooltip,delay:n.Constants.TimeoutImmediate})),this._toolTip=e.legendTooltip,s.onfocus=e=>this.displayTooltip(e),s.onblur=()=>this.dismissTooltip()),this._container=s}get container(){return this._container}displayTooltip(e){const t=e.currentTarget.getBoundingClientRect();this._tooltipTimer=window.setTimeout((()=>{const e={content:this._toolTip,delay:0,x:t.left+10,y:t.top+10};i.Tooltip.show(e)}),n.Constants.TooltipTimeoutMs)}dismissTooltip(){clearTimeout(this._tooltipTimer),this._tooltipTimer=null,i.Tooltip.dismiss()}}}.apply(t,n),void 0===s||(e.exports=s)},677:(e,t,i)=>{var n,s;n=[i,t,i(560),i(560),i(560),i(560),i(560),i(560),i(560),i(117),i(117)],s=function(e,t,i,n,s,a,r,o,h,d,c){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.CustomMultiSeriesGraph=void 0,t.CustomMultiSeriesGraph=class{constructor(e,t){this._defaultColorScheme=new r.ChartColorScheme("rgb(118, 174, 200)","rgba(118, 174, 200, 0.65)"),this._currentTimespan=new c.JsonTimespan(c.BigNumber.zero,c.BigNumber.zero),this._dataSeries=[],this._clientWidth=0,this._clientHeight=0,this._scaleIncreaseRatio=1.1,this._scaleChangedEvent=new d.AggregatedEvent,this._container=document.createElement("div"),this._container.classList.add("graphContainer"),this._container.tabIndex=0,this._container.style.zIndex=i.Constants.GraphContainerZIndex.toString(),this._canvas=document.createElement("canvas"),this._canvas.classList.add("graph-canvas"),this._context=this._canvas.getContext("2d"),this._unitConverter=new n.LocalizedUnitConverter(e.jsonConfig.Units,e.resources),this._currentTimespan=e.timeRange,this._scaleMin=e.scale.minimum,this._scaleMax=e.scale.maximum,this._isScaleFixed=e.scale.isFixed,this._onNewSeriesDataBoundFunction=e=>this.onNewSeriesData(e),e.jsonConfig.Unit&&(e.unit=e.resources[e.jsonConfig.Unit]),this._container.appendChild(this._canvas),e.jsonConfig.Series.forEach((t=>{let i;const n=t.Color?new r.ChartColorScheme(t.Color.Line,t.Color.Fill):this._defaultColorScheme;if(t.DataSource.AnalyzerId.toLowerCase()===o.CountersDataSeries.analyzerId.toLowerCase())i=new o.CountersDataSeries(t.DataSource.CounterId,this._currentTimespan,this._unitConverter,n,e.resources[t.Legend],e.resources[t.LegendTooltip]);else{const s=!e.jsonConfig.RefreshDataOnResizeAndZoom;i=new h.CustomCounterDataSeries(t.DataSource,this._currentTimespan,s,e.resources[t.Legend],e.resources[t.LegendTooltip],n,this._unitConverter)}e.legend.push({legendText:i.title,legendTooltip:i.tooltip,marker:i.marker}),i.newDataEvent.addEventListener(this._onNewSeriesDataBoundFunction),this._dataSeries.push(i)})),t&&t.forEach((e=>{e.newDataEvent.addEventListener(this._onNewSeriesDataBoundFunction),this._dataSeries.push(e)})),this._dataCursor=new s.DataCursor(this._container,this._dataSeries,this._currentTimespan,e.swimlaneId,this._scaleMin,this._scaleMax),this._scaleChangedEvent.addEventListener(this._dataCursor.onScaleChanged.bind(this._dataCursor)),this._container.appendChild(this._dataCursor.container)}get container(){return this._container}get scaleChangedEvent(){return this._scaleChangedEvent}dispose(){this._dataCursor.dispose(),this._dataSeries.forEach((e=>{e.newDataEvent.removeEventListener(this._onNewSeriesDataBoundFunction),e.dispose&&e.dispose()})),this._scaleChangedEvent.dispose()}resize(e){const t=this._container.clientWidth,i=this._container.clientHeight;this._clientWidth===t&&this._clientHeight===i||(this._clientWidth=t,this._clientHeight=i,this._canvas.width=this._clientWidth,this._canvas.height=this._clientHeight,this._dataCursor.resize(e),this.draw())}onDataUpdate(e){this._dataSeries.forEach((t=>{t.onDataUpdate&&t.onDataUpdate(e)}))}addSeriesData(e,t,i,n){}removeInvalidPoints(e){}render(e,t){}onViewportChanged(e){e.isIntermittent||this._currentTimespan.equals(e.currentTimespan)||(this._currentTimespan=e.currentTimespan,this._dataCursor.onViewportChanged(e),this._dataSeries.forEach((e=>{e.onViewportChanged(this._currentTimespan)})),this.draw())}onNewSeriesData(e){let t=!1;if(!this._isScaleFixed&&!isNaN(e.minValue)&&e.minValue<this._scaleMin&&(this._scaleMin=e.minValue,t=!0),this._isScaleFixed||isNaN(e.maxValue)||(this._scaleMax=e.maxValue,t=!0),this.draw(),t){const e=this._unitConverter.scaleValue(this._scaleMax);this._scaleChangedEvent.invokeEvent({minimum:this._scaleMin,maximum:this._scaleMax,unit:e.unit})}}draw(){this._context.clearRect(0,0,this._clientWidth,this._clientHeight),this._context.save();const e={gridX:this._currentTimespan,gridY:new a.MinMaxNumber(this._scaleMin,this._scaleMax),chartRect:new a.RectangleDimension(0,0,this._clientWidth,this._clientHeight)};this._dataSeries.forEach((t=>{t.draw(this._context,e)})),this._context.restore()}}}.apply(t,n),void 0===s||(e.exports=s)},875:(e,t,i)=>{var n,s;n=[i,t,i(560),i(560),i(560),i(560),i(560),i(560),i(560),i(398),i(973),i(585),i(677),i(952)],s=function(e,t,i,n,s,a,r,o,h,d,c,l,u,m){"use strict";function _(e,t,_,g,p,v){const C=new a.SwimlaneConfiguration(e,p,g);C.header.isBodyExpanded=t;const w=C.graph,E=new n.LocalizedUnitConverter(w.jsonConfig.Units,w.resources),S={CounterId:"",AnalyzerId:m.EventsViewerAnalyzerId()},f=[],T=new l.GraphResources(w.resources),x=new d.BarGraphDataSeries(S,C.graph.timeRange,E,T);f.push(x);const D=new u.CustomMultiSeriesGraph(w,f);D.container.setAttribute("aria-label",e.Title);const y=new r.Scale(C.graph.scale,i.ScaleType.Left,E),b=new r.Scale(C.graph.scale,i.ScaleType.Right,E);D.scaleChangedEvent.addEventListener(y.onScaleChanged.bind(y)),D.scaleChangedEvent.addEventListener(b.onScaleChanged.bind(b)),C.header.unit=C.graph.unit;const L=new s.SwimlaneBase(C.header,C.graph.height,p,v);return D.scaleChangedEvent.addEventListener(L.onScaleChanged.bind(L)),L.addMainRegionControl(new o.SelectionOverlay(D,p,v,C.id)),L.addMainRegionControl(new h.GridLineRenderer(p)),L.addLeftRegionControl(y),L.addRightRegionControl(b),L.addTitleControl(new c.CustomLegend(x)),L}Object.defineProperty(t,"__esModule",{value:!0}),t.EventsViewerSwimlaneFactory=void 0,t.EventsViewerSwimlaneFactory=_,window.EventsViewerSwimlaneFactory=_}.apply(t,n),void 0===s||(e.exports=s)},585:(e,t,i)=>{var n,s;n=[i,t,i(432),i(560)],s=function(e,t,i,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.GraphResources=void 0;class s{constructor(e){this._graphResources=e}getString(e,...t){if(this._graphResources){let i=this._graphResources[e];if(void 0!==i)return i=n.Utilities.formatString(i,...t),i}try{return i.Resources.getString.apply(i.Resources,...t)}catch(e){}return e}}t.GraphResources=s,s.FORMAT_REG_EXP=/\{{2}|\{(\d+)\}|\}{2}|\{|\}/g}.apply(t,n),void 0===s||(e.exports=s)},117:t=>{"use strict";t.exports=e},560:e=>{"use strict";e.exports=t},432:e=>{"use strict";e.exports=require("plugin-vs-v2")}},s={},function e(t){var i=s[t];if(void 0!==i)return i.exports;var a=s[t]={exports:{}};return n[t](a,a.exports,e),a.exports}(875);var n,s}));
// SIG // Begin signature block
// SIG // MIIoKgYJKoZIhvcNAQcCoIIoGzCCKBcCAQExDzANBglg
// SIG // hkgBZQMEAgEFADB3BgorBgEEAYI3AgEEoGkwZzAyBgor
// SIG // BgEEAYI3AgEeMCQCAQEEEBDgyQbOONQRoqMAEEvTUJAC
// SIG // AQACAQACAQACAQACAQAwMTANBglghkgBZQMEAgEFAAQg
// SIG // AsghuC++3zq1taP9EKqn1MP77pX4YopRmBO++sOSYBig
// SIG // gg12MIIF9DCCA9ygAwIBAgITMwAAA061PHrBhG/rKwAA
// SIG // AAADTjANBgkqhkiG9w0BAQsFADB+MQswCQYDVQQGEwJV
// SIG // UzETMBEGA1UECBMKV2FzaGluZ3RvbjEQMA4GA1UEBxMH
// SIG // UmVkbW9uZDEeMBwGA1UEChMVTWljcm9zb2Z0IENvcnBv
// SIG // cmF0aW9uMSgwJgYDVQQDEx9NaWNyb3NvZnQgQ29kZSBT
// SIG // aWduaW5nIFBDQSAyMDExMB4XDTIzMDMxNjE4NDMyOVoX
// SIG // DTI0MDMxNDE4NDMyOVowdDELMAkGA1UEBhMCVVMxEzAR
// SIG // BgNVBAgTCldhc2hpbmd0b24xEDAOBgNVBAcTB1JlZG1v
// SIG // bmQxHjAcBgNVBAoTFU1pY3Jvc29mdCBDb3Jwb3JhdGlv
// SIG // bjEeMBwGA1UEAxMVTWljcm9zb2Z0IENvcnBvcmF0aW9u
// SIG // MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA
// SIG // 3QiojSOiARVrryVJn+lnTiamZiMGLORuwCQ+VG3C+rbA
// SIG // vhATw269+qRRqNW7FKed50chWJ53KDIPBStHfIy5cNJY
// SIG // HsQw6+4InH9szgRVqn7/50i8MyRTT+VtNwxf9daGddq0
// SIG // hahpZvjuOnEY0wxQaTEQmWRnXWZUQY4r28tHiNVYEw9U
// SIG // 7wHXwWEHvNn4ZlkJGEf5VpgCvr1v9fmzu4x2sV0zQsSy
// SIG // AVtOxfDwY1HMBcccn23tphweIdS+FNDn2vh1/2kREO0q
// SIG // mGc+fbFzNskjn72MiI56kjvNDRgWs+Q78yBvPCdPgTYT
// SIG // rto5eg33Ko2ELNR/zzEkCCuhO5Vw10qV8wIDAQABo4IB
// SIG // czCCAW8wHwYDVR0lBBgwFgYKKwYBBAGCN0wIAQYIKwYB
// SIG // BQUHAwMwHQYDVR0OBBYEFJzHO2Z/7pCgbAYlpMHTX7De
// SIG // aXcAMEUGA1UdEQQ+MDykOjA4MR4wHAYDVQQLExVNaWNy
// SIG // b3NvZnQgQ29ycG9yYXRpb24xFjAUBgNVBAUTDTIzMDAx
// SIG // Mis1MDA1MTYwHwYDVR0jBBgwFoAUSG5k5VAF04KqFzc3
// SIG // IrVtqMp1ApUwVAYDVR0fBE0wSzBJoEegRYZDaHR0cDov
// SIG // L3d3dy5taWNyb3NvZnQuY29tL3BraW9wcy9jcmwvTWlj
// SIG // Q29kU2lnUENBMjAxMV8yMDExLTA3LTA4LmNybDBhBggr
// SIG // BgEFBQcBAQRVMFMwUQYIKwYBBQUHMAKGRWh0dHA6Ly93
// SIG // d3cubWljcm9zb2Z0LmNvbS9wa2lvcHMvY2VydHMvTWlj
// SIG // Q29kU2lnUENBMjAxMV8yMDExLTA3LTA4LmNydDAMBgNV
// SIG // HRMBAf8EAjAAMA0GCSqGSIb3DQEBCwUAA4ICAQA9tb/a
// SIG // R6C3QUjZRQI5pJseF8TmQD7FccV2w8kL9fpBg3vV6YAZ
// SIG // 09ZV58eyQ6RTCgcAMiMHSJ5r4SvaRgWt9U8ni96e0drN
// SIG // C/EgATz0SRwBJODR6QV8R45uEyo3swG0qqm4LMtdGOyg
// SIG // KcvvVKymtpBprLgErJPeT1Zub3puzpk7ONr5tASVFPiT
// SIG // 0C4PGP7HY907Uny2GGQGicEwCIIu3Yc5+YWrS6Ow4c/u
// SIG // E/jKxXfui1GtlN86/e0MMw7YcfkT/f0WZ7q+Ip80kLBu
// SIG // QwlSDKQNZdjVhANygHGtLSNpeoUDWLGii9ZHn3Xxwqz8
// SIG // RK8vKJyY8hhr/WCqC7+gDjuzoSRJm0Jc/8ZLGBtjfyUj
// SIG // ifkKmKRkxLmBWFVmop+x3uo4G+NSW6Thig3RP2/ldqv4
// SIG // F1IBXtoHcE6Qg7L4fEjEaKtfwTV3K+4kwFN/FYK/N4lb
// SIG // T2JhYWTlTNFC6f5Ck1aIqyKT9igsU+DnpDnLbfIK2J4S
// SIG // dekDI5jL+aOd4YzRVzsYoJEFmM1DvusOdINBQHhWvObo
// SIG // AggepVxJNtRRQdRXSB6Y0kH/iz/1tjlfx34Qt7kz4Cm0
// SIG // bV6PN02WBLnaKMmfwFbtPLIm2dzJBjiTkSxETcCpthu6
// SIG // KnTr+EI/GdCaxoDM4+OjRSgMZC0qROaB0GD9R7T8dZT3
// SIG // w+4jUmybD+i4lB1x9TCCB3owggVioAMCAQICCmEOkNIA
// SIG // AAAAAAMwDQYJKoZIhvcNAQELBQAwgYgxCzAJBgNVBAYT
// SIG // AlVTMRMwEQYDVQQIEwpXYXNoaW5ndG9uMRAwDgYDVQQH
// SIG // EwdSZWRtb25kMR4wHAYDVQQKExVNaWNyb3NvZnQgQ29y
// SIG // cG9yYXRpb24xMjAwBgNVBAMTKU1pY3Jvc29mdCBSb290
// SIG // IENlcnRpZmljYXRlIEF1dGhvcml0eSAyMDExMB4XDTEx
// SIG // MDcwODIwNTkwOVoXDTI2MDcwODIxMDkwOVowfjELMAkG
// SIG // A1UEBhMCVVMxEzARBgNVBAgTCldhc2hpbmd0b24xEDAO
// SIG // BgNVBAcTB1JlZG1vbmQxHjAcBgNVBAoTFU1pY3Jvc29m
// SIG // dCBDb3Jwb3JhdGlvbjEoMCYGA1UEAxMfTWljcm9zb2Z0
// SIG // IENvZGUgU2lnbmluZyBQQ0EgMjAxMTCCAiIwDQYJKoZI
// SIG // hvcNAQEBBQADggIPADCCAgoCggIBAKvw+nIQHC6t2G6q
// SIG // ghBNNLrytlghn0IbKmvpWlCquAY4GgRJun/DDB7dN2vG
// SIG // EtgL8DjCmQawyDnVARQxQtOJDXlkh36UYCRsr55JnOlo
// SIG // XtLfm1OyCizDr9mpK656Ca/XllnKYBoF6WZ26DJSJhIv
// SIG // 56sIUM+zRLdd2MQuA3WraPPLbfM6XKEW9Ea64DhkrG5k
// SIG // NXimoGMPLdNAk/jj3gcN1Vx5pUkp5w2+oBN3vpQ97/vj
// SIG // K1oQH01WKKJ6cuASOrdJXtjt7UORg9l7snuGG9k+sYxd
// SIG // 6IlPhBryoS9Z5JA7La4zWMW3Pv4y07MDPbGyr5I4ftKd
// SIG // gCz1TlaRITUlwzluZH9TupwPrRkjhMv0ugOGjfdf8NBS
// SIG // v4yUh7zAIXQlXxgotswnKDglmDlKNs98sZKuHCOnqWbs
// SIG // YR9q4ShJnV+I4iVd0yFLPlLEtVc/JAPw0XpbL9Uj43Bd
// SIG // D1FGd7P4AOG8rAKCX9vAFbO9G9RVS+c5oQ/pI0m8GLhE
// SIG // fEXkwcNyeuBy5yTfv0aZxe/CHFfbg43sTUkwp6uO3+xb
// SIG // n6/83bBm4sGXgXvt1u1L50kppxMopqd9Z4DmimJ4X7Iv
// SIG // hNdXnFy/dygo8e1twyiPLI9AN0/B4YVEicQJTMXUpUMv
// SIG // dJX3bvh4IFgsE11glZo+TzOE2rCIF96eTvSWsLxGoGyY
// SIG // 0uDWiIwLAgMBAAGjggHtMIIB6TAQBgkrBgEEAYI3FQEE
// SIG // AwIBADAdBgNVHQ4EFgQUSG5k5VAF04KqFzc3IrVtqMp1
// SIG // ApUwGQYJKwYBBAGCNxQCBAweCgBTAHUAYgBDAEEwCwYD
// SIG // VR0PBAQDAgGGMA8GA1UdEwEB/wQFMAMBAf8wHwYDVR0j
// SIG // BBgwFoAUci06AjGQQ7kUBU7h6qfHMdEjiTQwWgYDVR0f
// SIG // BFMwUTBPoE2gS4ZJaHR0cDovL2NybC5taWNyb3NvZnQu
// SIG // Y29tL3BraS9jcmwvcHJvZHVjdHMvTWljUm9vQ2VyQXV0
// SIG // MjAxMV8yMDExXzAzXzIyLmNybDBeBggrBgEFBQcBAQRS
// SIG // MFAwTgYIKwYBBQUHMAKGQmh0dHA6Ly93d3cubWljcm9z
// SIG // b2Z0LmNvbS9wa2kvY2VydHMvTWljUm9vQ2VyQXV0MjAx
// SIG // MV8yMDExXzAzXzIyLmNydDCBnwYDVR0gBIGXMIGUMIGR
// SIG // BgkrBgEEAYI3LgMwgYMwPwYIKwYBBQUHAgEWM2h0dHA6
// SIG // Ly93d3cubWljcm9zb2Z0LmNvbS9wa2lvcHMvZG9jcy9w
// SIG // cmltYXJ5Y3BzLmh0bTBABggrBgEFBQcCAjA0HjIgHQBM
// SIG // AGUAZwBhAGwAXwBwAG8AbABpAGMAeQBfAHMAdABhAHQA
// SIG // ZQBtAGUAbgB0AC4gHTANBgkqhkiG9w0BAQsFAAOCAgEA
// SIG // Z/KGpZjgVHkaLtPYdGcimwuWEeFjkplCln3SeQyQwWVf
// SIG // Liw++MNy0W2D/r4/6ArKO79HqaPzadtjvyI1pZddZYSQ
// SIG // fYtGUFXYDJJ80hpLHPM8QotS0LD9a+M+By4pm+Y9G6XU
// SIG // tR13lDni6WTJRD14eiPzE32mkHSDjfTLJgJGKsKKELuk
// SIG // qQUMm+1o+mgulaAqPyprWEljHwlpblqYluSD9MCP80Yr
// SIG // 3vw70L01724lruWvJ+3Q3fMOr5kol5hNDj0L8giJ1h/D
// SIG // Mhji8MUtzluetEk5CsYKwsatruWy2dsViFFFWDgycSca
// SIG // f7H0J/jeLDogaZiyWYlobm+nt3TDQAUGpgEqKD6CPxNN
// SIG // ZgvAs0314Y9/HG8VfUWnduVAKmWjw11SYobDHWM2l4bf
// SIG // 2vP48hahmifhzaWX0O5dY0HjWwechz4GdwbRBrF1HxS+
// SIG // YWG18NzGGwS+30HHDiju3mUv7Jf2oVyW2ADWoUa9WfOX
// SIG // pQlLSBCZgB/QACnFsZulP0V3HjXG0qKin3p6IvpIlR+r
// SIG // +0cjgPWe+L9rt0uX4ut1eBrs6jeZeRhL/9azI2h15q/6
// SIG // /IvrC4DqaTuv/DDtBEyO3991bWORPdGdVk5Pv4BXIqF4
// SIG // ETIheu9BCrE/+6jMpF3BoYibV3FWTkhFwELJm3ZbCoBI
// SIG // a/15n8G9bW1qyVJzEw16UM0xghoMMIIaCAIBATCBlTB+
// SIG // MQswCQYDVQQGEwJVUzETMBEGA1UECBMKV2FzaGluZ3Rv
// SIG // bjEQMA4GA1UEBxMHUmVkbW9uZDEeMBwGA1UEChMVTWlj
// SIG // cm9zb2Z0IENvcnBvcmF0aW9uMSgwJgYDVQQDEx9NaWNy
// SIG // b3NvZnQgQ29kZSBTaWduaW5nIFBDQSAyMDExAhMzAAAD
// SIG // TrU8esGEb+srAAAAAANOMA0GCWCGSAFlAwQCAQUAoIGu
// SIG // MBkGCSqGSIb3DQEJAzEMBgorBgEEAYI3AgEEMBwGCisG
// SIG // AQQBgjcCAQsxDjAMBgorBgEEAYI3AgEVMC8GCSqGSIb3
// SIG // DQEJBDEiBCAi+oZKKq9hlPctLmTFnpGgk/gZD8u7YmT4
// SIG // aVn1I65rfjBCBgorBgEEAYI3AgEMMTQwMqAUgBIATQBp
// SIG // AGMAcgBvAHMAbwBmAHShGoAYaHR0cDovL3d3dy5taWNy
// SIG // b3NvZnQuY29tMA0GCSqGSIb3DQEBAQUABIIBAGvxj8s8
// SIG // xs9OTGz5Xz4FlcxDGMaJ2wsWOJyihhXdZz03pGmG6GvO
// SIG // Tn4vZEI92ey/KXtoF4fbpUs1nyF32j93R5N8J4a7iJ3c
// SIG // yZoPig1bOF2LVH/Q7Io9sRq3WO6T6Ubt1cV1SJ3Tbh5w
// SIG // wprXSbBFWSaN2ibxtga0zxzZLxlXWZ8+iR4s+3qmaDMI
// SIG // sBDb3KViW3BIMnuLOS2T1AI6xTEuVOitx4vicm3xHbGs
// SIG // giTxggkcoUvcW1Rb6ENbuai9QvsvOa43rCToIC3pEMrO
// SIG // /MNE5l+15ShfGAMgfviTMgcUxcFB6V6i0DpM5qzyfQIU
// SIG // Y/fUDJPFCZmPRBWu5uBED/ETctuhgheWMIIXkgYKKwYB
// SIG // BAGCNwMDATGCF4Iwghd+BgkqhkiG9w0BBwKgghdvMIIX
// SIG // awIBAzEPMA0GCWCGSAFlAwQCAQUAMIIBUQYLKoZIhvcN
// SIG // AQkQAQSgggFABIIBPDCCATgCAQEGCisGAQQBhFkKAwEw
// SIG // MTANBglghkgBZQMEAgEFAAQgwB84EHUwEHfURFGt6QGv
// SIG // z3kERyeBpstNADcq8fK4z3ICBmUoZBI8YRgSMjAyMzEw
// SIG // MjAxNzA0MzUuOTlaMASAAgH0oIHRpIHOMIHLMQswCQYD
// SIG // VQQGEwJVUzETMBEGA1UECBMKV2FzaGluZ3RvbjEQMA4G
// SIG // A1UEBxMHUmVkbW9uZDEeMBwGA1UEChMVTWljcm9zb2Z0
// SIG // IENvcnBvcmF0aW9uMSUwIwYDVQQLExxNaWNyb3NvZnQg
// SIG // QW1lcmljYSBPcGVyYXRpb25zMScwJQYDVQQLEx5uU2hp
// SIG // ZWxkIFRTUyBFU046QTkzNS0wM0UwLUQ5NDcxJTAjBgNV
// SIG // BAMTHE1pY3Jvc29mdCBUaW1lLVN0YW1wIFNlcnZpY2Wg
// SIG // ghHtMIIHIDCCBQigAwIBAgITMwAAAdGyW0AobC7SRQAB
// SIG // AAAB0TANBgkqhkiG9w0BAQsFADB8MQswCQYDVQQGEwJV
// SIG // UzETMBEGA1UECBMKV2FzaGluZ3RvbjEQMA4GA1UEBxMH
// SIG // UmVkbW9uZDEeMBwGA1UEChMVTWljcm9zb2Z0IENvcnBv
// SIG // cmF0aW9uMSYwJAYDVQQDEx1NaWNyb3NvZnQgVGltZS1T
// SIG // dGFtcCBQQ0EgMjAxMDAeFw0yMzA1MjUxOTEyMThaFw0y
// SIG // NDAyMDExOTEyMThaMIHLMQswCQYDVQQGEwJVUzETMBEG
// SIG // A1UECBMKV2FzaGluZ3RvbjEQMA4GA1UEBxMHUmVkbW9u
// SIG // ZDEeMBwGA1UEChMVTWljcm9zb2Z0IENvcnBvcmF0aW9u
// SIG // MSUwIwYDVQQLExxNaWNyb3NvZnQgQW1lcmljYSBPcGVy
// SIG // YXRpb25zMScwJQYDVQQLEx5uU2hpZWxkIFRTUyBFU046
// SIG // QTkzNS0wM0UwLUQ5NDcxJTAjBgNVBAMTHE1pY3Jvc29m
// SIG // dCBUaW1lLVN0YW1wIFNlcnZpY2UwggIiMA0GCSqGSIb3
// SIG // DQEBAQUAA4ICDwAwggIKAoICAQCZTNo0OeGz2XFd2gLg
// SIG // 5nTlBm8XOpuwJIiXsMU61rwq1ZKDpa443RrSG/pH8Gz6
// SIG // XNnFQKGnCqNCtmvoKULApwrT/s7/e1X0lNFKmj7U7X4p
// SIG // 00S0uQbW6LwSn/zWHaG2c54ZXsGY+BYfhWDgbFpCTxRz
// SIG // TnRCG62bkWPp6ZHbZPg4Ht1CRCAMhhOGTR8wI4G7wwWZ
// SIG // wdMc6UvUUlq0ql9AxAfzkYRpi2tRvDHMdmZ3vyXpqhFw
// SIG // vRG8cgCH/TTCjW5q6aNbdqKL3BFDPzUtuCNsPXL3/E0d
// SIG // R2bDMqa0aNH+iIfhGC4/vcwuteOMCPUIDVSqDCNfIaPD
// SIG // EwYci1fd9gu1zVw+HEhDZM7Ea3nxIUrzt+Rfp5ToMMj4
// SIG // QAmJ6Uadm+TPbDbo8kFIK70ShmW8wn8fJk9ReQQEpTtI
// SIG // N43eRv9QmXy3Ued80osOBE+WkdMvSCFh+qgCsKdzQxQJ
// SIG // G62cTeoU2eqNhH3oppXmyfVUwbsefQzMPtbinCZd0FUl
// SIG // mlM/dH+4OniqQyaHvrtYy3wqIafY3zeFITlVAoP9q9vF
// SIG // 4W7KHR/uF0mvTpAL5NaTDN1plQS0MdjMkgzZK5gtwqOe
// SIG // /3rTlqBzxwa7YYp3urP5yWkTzISGnhNWIZOxOyQIOxZf
// SIG // biIbAHbm3M8hj73KQWcCR5JavgkwUmncFHESaQf4Drqs
// SIG // +/1L1QIDAQABo4IBSTCCAUUwHQYDVR0OBBYEFAuO8UzF
// SIG // 7DcH0mmsF4XQxxHQvS2jMB8GA1UdIwQYMBaAFJ+nFV0A
// SIG // XmJdg/Tl0mWnG1M1GelyMF8GA1UdHwRYMFYwVKBSoFCG
// SIG // Tmh0dHA6Ly93d3cubWljcm9zb2Z0LmNvbS9wa2lvcHMv
// SIG // Y3JsL01pY3Jvc29mdCUyMFRpbWUtU3RhbXAlMjBQQ0El
// SIG // MjAyMDEwKDEpLmNybDBsBggrBgEFBQcBAQRgMF4wXAYI
// SIG // KwYBBQUHMAKGUGh0dHA6Ly93d3cubWljcm9zb2Z0LmNv
// SIG // bS9wa2lvcHMvY2VydHMvTWljcm9zb2Z0JTIwVGltZS1T
// SIG // dGFtcCUyMFBDQSUyMDIwMTAoMSkuY3J0MAwGA1UdEwEB
// SIG // /wQCMAAwFgYDVR0lAQH/BAwwCgYIKwYBBQUHAwgwDgYD
// SIG // VR0PAQH/BAQDAgeAMA0GCSqGSIb3DQEBCwUAA4ICAQCb
// SIG // u9rTAHV24mY0qoG5eEnImz5akGXTviBwKp2Y51s26w8o
// SIG // DrWor+m00R4/3BcDmYlUK8Nrx/auYFYidZddcUjw42Qx
// SIG // SStmv/qWnCQi/2OnH32KVHQ+kMOZPABQTG1XkcnYPUOO
// SIG // EEor6f/3Js1uj4wjHzE4V4aumYXBAsr4L5KR8vKes5tF
// SIG // xhMkWND/O7W/RaHYwJMjMkxVosBok7V21sJAlxScEXxf
// SIG // Ja+/qkqUr7CZgw3R4jCHRkPqQhMWibXPMYar/iF0ZuLB
// SIG // 9O89DMJNhjK9BSf6iqgZoMuzIVt+EBoTzpv/9p4wQ6xo
// SIG // BCs29mkj/EIWFdc+5a30kuCQOSEOj07+WI29A4k6QIRB
// SIG // 5w+eMmZ0Jec0sSyeQB5KjxE51iYMhtlMrUKcr06nBqCs
// SIG // SKPYsSAITAzgssJD+Z/cTS7Cu35fJrWhM9NYX24uAxYL
// SIG // AW0ipNtWptIeV6akuZEeEV6BNtM3VTk+mAlV5/eC/0Y1
// SIG // 7aVSjK5/gyDoLNmrgVwv5TAaBmq/wgRRFHmW9UJ3zv8L
// SIG // mk6mIoAyTpqBbuUjMLyrtajuSsA/m2DnKMO0Qiz1v+FS
// SIG // VbqM38J/PTlhCTUbFOx0kLT7Y/7+ZyrilVCzyAYfFIin
// SIG // DIjWlM85tDeU8ZfJCjFKwq3DsRxV4JY18xww8TTmod3l
// SIG // kr9NqGQ54LmyPVc+5ibNrjCCB3EwggVZoAMCAQICEzMA
// SIG // AAAVxedrngKbSZkAAAAAABUwDQYJKoZIhvcNAQELBQAw
// SIG // gYgxCzAJBgNVBAYTAlVTMRMwEQYDVQQIEwpXYXNoaW5n
// SIG // dG9uMRAwDgYDVQQHEwdSZWRtb25kMR4wHAYDVQQKExVN
// SIG // aWNyb3NvZnQgQ29ycG9yYXRpb24xMjAwBgNVBAMTKU1p
// SIG // Y3Jvc29mdCBSb290IENlcnRpZmljYXRlIEF1dGhvcml0
// SIG // eSAyMDEwMB4XDTIxMDkzMDE4MjIyNVoXDTMwMDkzMDE4
// SIG // MzIyNVowfDELMAkGA1UEBhMCVVMxEzARBgNVBAgTCldh
// SIG // c2hpbmd0b24xEDAOBgNVBAcTB1JlZG1vbmQxHjAcBgNV
// SIG // BAoTFU1pY3Jvc29mdCBDb3Jwb3JhdGlvbjEmMCQGA1UE
// SIG // AxMdTWljcm9zb2Z0IFRpbWUtU3RhbXAgUENBIDIwMTAw
// SIG // ggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQDk
// SIG // 4aZM57RyIQt5osvXJHm9DtWC0/3unAcH0qlsTnXIyjVX
// SIG // 9gF/bErg4r25PhdgM/9cT8dm95VTcVrifkpa/rg2Z4VG
// SIG // Iwy1jRPPdzLAEBjoYH1qUoNEt6aORmsHFPPFdvWGUNzB
// SIG // RMhxXFExN6AKOG6N7dcP2CZTfDlhAnrEqv1yaa8dq6z2
// SIG // Nr41JmTamDu6GnszrYBbfowQHJ1S/rboYiXcag/PXfT+
// SIG // jlPP1uyFVk3v3byNpOORj7I5LFGc6XBpDco2LXCOMcg1
// SIG // KL3jtIckw+DJj361VI/c+gVVmG1oO5pGve2krnopN6zL
// SIG // 64NF50ZuyjLVwIYwXE8s4mKyzbnijYjklqwBSru+cakX
// SIG // W2dg3viSkR4dPf0gz3N9QZpGdc3EXzTdEonW/aUgfX78
// SIG // 2Z5F37ZyL9t9X4C626p+Nuw2TPYrbqgSUei/BQOj0XOm
// SIG // TTd0lBw0gg/wEPK3Rxjtp+iZfD9M269ewvPV2HM9Q07B
// SIG // MzlMjgK8QmguEOqEUUbi0b1qGFphAXPKZ6Je1yh2AuIz
// SIG // GHLXpyDwwvoSCtdjbwzJNmSLW6CmgyFdXzB0kZSU2LlQ
// SIG // +QuJYfM2BjUYhEfb3BvR/bLUHMVr9lxSUV0S2yW6r1AF
// SIG // emzFER1y7435UsSFF5PAPBXbGjfHCBUYP3irRbb1Hode
// SIG // 2o+eFnJpxq57t7c+auIurQIDAQABo4IB3TCCAdkwEgYJ
// SIG // KwYBBAGCNxUBBAUCAwEAATAjBgkrBgEEAYI3FQIEFgQU
// SIG // KqdS/mTEmr6CkTxGNSnPEP8vBO4wHQYDVR0OBBYEFJ+n
// SIG // FV0AXmJdg/Tl0mWnG1M1GelyMFwGA1UdIARVMFMwUQYM
// SIG // KwYBBAGCN0yDfQEBMEEwPwYIKwYBBQUHAgEWM2h0dHA6
// SIG // Ly93d3cubWljcm9zb2Z0LmNvbS9wa2lvcHMvRG9jcy9S
// SIG // ZXBvc2l0b3J5Lmh0bTATBgNVHSUEDDAKBggrBgEFBQcD
// SIG // CDAZBgkrBgEEAYI3FAIEDB4KAFMAdQBiAEMAQTALBgNV
// SIG // HQ8EBAMCAYYwDwYDVR0TAQH/BAUwAwEB/zAfBgNVHSME
// SIG // GDAWgBTV9lbLj+iiXGJo0T2UkFvXzpoYxDBWBgNVHR8E
// SIG // TzBNMEugSaBHhkVodHRwOi8vY3JsLm1pY3Jvc29mdC5j
// SIG // b20vcGtpL2NybC9wcm9kdWN0cy9NaWNSb29DZXJBdXRf
// SIG // MjAxMC0wNi0yMy5jcmwwWgYIKwYBBQUHAQEETjBMMEoG
// SIG // CCsGAQUFBzAChj5odHRwOi8vd3d3Lm1pY3Jvc29mdC5j
// SIG // b20vcGtpL2NlcnRzL01pY1Jvb0NlckF1dF8yMDEwLTA2
// SIG // LTIzLmNydDANBgkqhkiG9w0BAQsFAAOCAgEAnVV9/Cqt
// SIG // 4SwfZwExJFvhnnJL/Klv6lwUtj5OR2R4sQaTlz0xM7U5
// SIG // 18JxNj/aZGx80HU5bbsPMeTCj/ts0aGUGCLu6WZnOlNN
// SIG // 3Zi6th542DYunKmCVgADsAW+iehp4LoJ7nvfam++Kctu
// SIG // 2D9IdQHZGN5tggz1bSNU5HhTdSRXud2f8449xvNo32X2
// SIG // pFaq95W2KFUn0CS9QKC/GbYSEhFdPSfgQJY4rPf5KYnD
// SIG // vBewVIVCs/wMnosZiefwC2qBwoEZQhlSdYo2wh3DYXMu
// SIG // LGt7bj8sCXgU6ZGyqVvfSaN0DLzskYDSPeZKPmY7T7uG
// SIG // +jIa2Zb0j/aRAfbOxnT99kxybxCrdTDFNLB62FD+Cljd
// SIG // QDzHVG2dY3RILLFORy3BFARxv2T5JL5zbcqOCb2zAVdJ
// SIG // VGTZc9d/HltEAY5aGZFrDZ+kKNxnGSgkujhLmm77IVRr
// SIG // akURR6nxt67I6IleT53S0Ex2tVdUCbFpAUR+fKFhbHP+
// SIG // CrvsQWY9af3LwUFJfn6Tvsv4O+S3Fb+0zj6lMVGEvL8C
// SIG // wYKiexcdFYmNcP7ntdAoGokLjzbaukz5m/8K6TT4JDVn
// SIG // K+ANuOaMmdbhIurwJ0I9JZTmdHRbatGePu1+oDEzfbzL
// SIG // 6Xu/OHBE0ZDxyKs6ijoIYn/ZcGNTTY3ugm2lBRDBcQZq
// SIG // ELQdVTNYs6FwZvKhggNQMIICOAIBATCB+aGB0aSBzjCB
// SIG // yzELMAkGA1UEBhMCVVMxEzARBgNVBAgTCldhc2hpbmd0
// SIG // b24xEDAOBgNVBAcTB1JlZG1vbmQxHjAcBgNVBAoTFU1p
// SIG // Y3Jvc29mdCBDb3Jwb3JhdGlvbjElMCMGA1UECxMcTWlj
// SIG // cm9zb2Z0IEFtZXJpY2EgT3BlcmF0aW9uczEnMCUGA1UE
// SIG // CxMeblNoaWVsZCBUU1MgRVNOOkE5MzUtMDNFMC1EOTQ3
// SIG // MSUwIwYDVQQDExxNaWNyb3NvZnQgVGltZS1TdGFtcCBT
// SIG // ZXJ2aWNloiMKAQEwBwYFKw4DAhoDFQBHJY2Fv+GhLQtR
// SIG // DR2vIzBaSv/7LKCBgzCBgKR+MHwxCzAJBgNVBAYTAlVT
// SIG // MRMwEQYDVQQIEwpXYXNoaW5ndG9uMRAwDgYDVQQHEwdS
// SIG // ZWRtb25kMR4wHAYDVQQKExVNaWNyb3NvZnQgQ29ycG9y
// SIG // YXRpb24xJjAkBgNVBAMTHU1pY3Jvc29mdCBUaW1lLVN0
// SIG // YW1wIFBDQSAyMDEwMA0GCSqGSIb3DQEBCwUAAgUA6NzF
// SIG // RzAiGA8yMDIzMTAyMDA5MjIxNVoYDzIwMjMxMDIxMDky
// SIG // MjE1WjB3MD0GCisGAQQBhFkKBAExLzAtMAoCBQDo3MVH
// SIG // AgEAMAoCAQACAhGgAgH/MAcCAQACAhJVMAoCBQDo3hbH
// SIG // AgEAMDYGCisGAQQBhFkKBAIxKDAmMAwGCisGAQQBhFkK
// SIG // AwKgCjAIAgEAAgMHoSChCjAIAgEAAgMBhqAwDQYJKoZI
// SIG // hvcNAQELBQADggEBAIxE/8eYEhi3DIc+SRqaC9p0q2FC
// SIG // zolPX7GObQ+dMBt4/gJXgI5wergRCllIUNgqmXX5JUjt
// SIG // ar0Pd5sJVuybwxE++I7ahxCkaW3ubRTvQmld7TNIGJfy
// SIG // b2Ho4Qzjdiymuz7wS9bdrZGM/OsqeHDNUG1ZvA5hedpW
// SIG // FuV6q+sP5jlFsgjcYRCtZ4eCMOtgRAkOtqAHC36xBmWL
// SIG // kiy1dcu/7sKTqPSGhGbHWxn74fKqIMMAXZujN8MjgA+A
// SIG // R2xrC0afcY6XSeYShO3XnSDdByrhpun/RvWBC1Rcf9IW
// SIG // a17psTsUbWNRPkHGsttHRhdNZ2LSmUwgTfqkKlDzOuSU
// SIG // Alzq1JQxggQNMIIECQIBATCBkzB8MQswCQYDVQQGEwJV
// SIG // UzETMBEGA1UECBMKV2FzaGluZ3RvbjEQMA4GA1UEBxMH
// SIG // UmVkbW9uZDEeMBwGA1UEChMVTWljcm9zb2Z0IENvcnBv
// SIG // cmF0aW9uMSYwJAYDVQQDEx1NaWNyb3NvZnQgVGltZS1T
// SIG // dGFtcCBQQ0EgMjAxMAITMwAAAdGyW0AobC7SRQABAAAB
// SIG // 0TANBglghkgBZQMEAgEFAKCCAUowGgYJKoZIhvcNAQkD
// SIG // MQ0GCyqGSIb3DQEJEAEEMC8GCSqGSIb3DQEJBDEiBCCZ
// SIG // RDLufnMhAi8bXyjl8ddnbZNK2NhlDnrWtlVWFflaADCB
// SIG // +gYLKoZIhvcNAQkQAi8xgeowgecwgeQwgb0EIMy8YXkC
// SIG // ALv57c5sRhrPTub1q4TwJ6oVA36k8IiI/AcMMIGYMIGA
// SIG // pH4wfDELMAkGA1UEBhMCVVMxEzARBgNVBAgTCldhc2hp
// SIG // bmd0b24xEDAOBgNVBAcTB1JlZG1vbmQxHjAcBgNVBAoT
// SIG // FU1pY3Jvc29mdCBDb3Jwb3JhdGlvbjEmMCQGA1UEAxMd
// SIG // TWljcm9zb2Z0IFRpbWUtU3RhbXAgUENBIDIwMTACEzMA
// SIG // AAHRsltAKGwu0kUAAQAAAdEwIgQgNGQ571rQjeGCiTpT
// SIG // FmDgfPLHI9ozbYEguW1bAsu7IycwDQYJKoZIhvcNAQEL
// SIG // BQAEggIAPfLtgaz/gQvAFBIvcUhkxTWcXxbmDrxPMtEF
// SIG // hU/h2vQ2NXsMXTu17lLASf5wxbVa7xNSb0KmV47OboWN
// SIG // ZYUhWDmHou/PI5NXjvJiMPb2LCkNlTQOOjZtAhuzrLqv
// SIG // NSc8N2JUMDP6XKKoMQ0htGDn1z5txeJXENDKb9EkjWvH
// SIG // 28oQwdLmcE40lR+amEy9aTXe0y9Z+dBOlMx9iKAHEiQf
// SIG // rcG/8OK5Ce39Er+3eeUsVcMv6YgA9rCY1OBhJs3h8b4i
// SIG // uF0g64EFoaQ99w0aXqjI7NQW6IRn2+iEbz07OGt7Eg2m
// SIG // TuZ+efWDth4gtTxxuDx/rI1eLxklHYLKKPhrdgp1N9Q4
// SIG // RHSVQr5KLyltigEzgA4vAyZ1CPHJEL1ji2C6Nj/0T/4M
// SIG // BIv7fKD1trt/j13aetoFhvGtVKx1QdAlnK8RZIRejO8d
// SIG // AXc8K/+uGVzRr3TizNf22rykTOX0+VBAX+OId6lwQ7go
// SIG // WXo+SqCb4K1noUweIWVPl+IZtvtabr4XdM49PfTIQUsS
// SIG // Vj6QYZoCn6v6S3bM2fcOVQOLi4WmmJ1yJvm8bb3Bq9vw
// SIG // lX27c7DB7rRCHIw4u09uF3TJ0K6qCrivc1DoAC7mSOf/
// SIG // BXZSwlFUVawUkoYux2t9ZQ5nT8BpwECPhYxVmlEXZHsr
// SIG // KyB/1H7XdJwJE0ACZynS3bvKKcoTFjU=
// SIG // End signature block
